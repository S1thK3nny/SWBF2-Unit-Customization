// ----- Start Awing Weapons ----------------------

SoundProperties()
{
    Name("all_weap_fly_awing_cannon_fire");
    Group("weapons");
    Inherit("flyer_weapon_template");
    SampleList()
    {
        Sample("wpn_jediStrftr_blaster_fire", 1.0);
    }
}

SoundProperties()
{
    Name("all_weap_fly_awing_missile_fire");
    Group("weapons");
    Inherit("flyer_weapon_template");
    Gain(0.9);
    SampleList()
    {
        Sample("wpn_hailfire_missile_fire", 1.0);        
    }
}

// ----- End Awing Weapons -------------------------


// Static Flyer Foley --------------------------------

SoundProperties()
{
    Name("all_fly_awing_airbrakes_on");
    Group("vehicle_foley");
    Inherit("flyer_foley_template");
    Gain(0.35)
    SampleList()
    {
        Sample("sfx_pod_airbrakes_off", 1.0);
    }
}

SoundProperties()
{
    Name("all_fly_awing_airbrakes_off");
    Group("vehicle_foley");
    Inherit("flyer_foley_template");
    Gain(0.5)
    SampleList()
    {
        Sample("sfx_pod_airbrakes_on", 1.0);
    }
}

// Takeoff ----------------------------------------
#ifplatform xbox ps2
SoundProperties()
{
    Name("all_fly_awing_take_off");
    Group("vehicle_foley");
    Inherit("flyer_foley_template");
    Gain(0.65)
    SampleList()
    {
        Sample("startup_soft", 1.0);
    }
}
#endifplatform xbox ps2


// Land --------------------------------

SoundProperties()
{
    Name("all_fly_awing_land_property");
    Group("vehicle_foley");
    Inherit("flyer_foley_template");
    Gain(0.65)
    Pitch(0.85)
    PitchDev(0.0)
    SampleList()
    {
        Sample("shutdown_soft", 1.0);
    }
}

// Turnon --------------------------------
#ifplatform xbox ps2
SoundProperties()
{
    Name("all_fly_awing_turn_on_property");
    Group("vehicle_foley");
    Inherit("flyer_foley_template");
    Gain(0.65)
    Pitch(0.85)
    PitchDev(0.0)
    SampleList()
    {
        Sample("startup_soft", 1.0);
    }
}
#endifplatform xbox ps2
#ifplatform pc
SoundProperties()
{
    Name("all_fly_awing_turn_on_property");
    Group("vehicle_foley");
    Inherit("flyer_foley_template");
    Gain(0.65)
    Pitch(0.85)
    PitchDev(0.0)
    SampleList()
    {
        Sample("cis_startup", 1.0);
    }
}
#endifplatform pc

// Turnoff  --------------------------------
//Played when the flyer turns off

#ifplatform xbox ps2
SoundProperties()
{
    Name("all_fly_awing_turn_off_property");
    Group("vehicle_foley");
    Inherit("flyer_foley_template");
    Gain(0.65)
    Pitch(0.85)
    PitchDev(0.0)
    SampleList()
    {
        Sample("shutdown_soft", 1.0);
    }
}
#endifplatform xbox ps2
#ifplatform pc
SoundProperties()
{
    Name("all_fly_awing_turn_off_property");
    Group("vehicle_foley");
    Inherit("flyer_foley_template");
    Gain(0.65)
    Pitch(0.85)
    PitchDev(0.0)
    SampleList()
    {
        Sample("heavy_shift_down", 1.0);
    }
}
#endifplatform pc

// Turning Off --------------------------------
// Played when a soldier leaves the flyer

// Plays airbrakes on a delay

// Shift Up   --------------------------------

SoundProperties()
{
    Name("all_fly_awing_shift_up_property");
    Group("vehicle_foley");
    Inherit("flyer_shift_template");
    SampleList()
    {
        Sample("awing_shift_up", 1.0);
    }
}

SoundProperties()
{
    Name("all_fly_awing_shift_up_high_property");
    Group("vehicle_foley");
    Inherit("flyer_shift_template");
    Pitch(1.3);
    SampleList()
    {
        Sample("awing_shift_up", 1.0);
    }
}

// Shift Down --------------------------------

SoundProperties()
{
    Name("all_fly_awing_shift_down_property");
    Group("vehicle_foley");
    Inherit("flyer_foley_template");
    SampleList()
    {
        Sample("awing_shift_down", 1.0);
    }
}

// Roll side to side --------------------------

SoundProperties()
{
    Name("all_fly_awing_roll");
    Group("vehicles");
    Inherit("flyer_trick_template");
    Pitch(0.85)
    PitchDev(0.0)
    SampleList()
    {
      Sample("awing_shift_up", 1.0);

    }
}

// Flip/Roll forward/back -----------------------

SoundProperties()
{
    Name("all_fly_awing_flip");
    Group("vehicles");
    Inherit("flyer_trick_template");
    SampleList()
    {
      Sample("awing_roll", 1.0);

    }
}

// Damage --------------------------------

SoundProperties()
{
    Name("awing_engine_damage_idle_property");
    Group("vehicles");
    Inherit("flyer_eng_hi-mid_template");
    SampleList()
    {
      Sample("eng_chop_a_loop", 1.0);
    }
}

// Boost --------------------------------

SoundProperties()
{
    Name("awing_engine_boost_idle_property");
    Group("vehicles");
    Inherit("flyer_eng_hi-mid_template");
    SampleList()
    {
      Sample("awing_mid", 1.0);

    }
}

// ----- Start Awing Engine Loops ----------------------

SoundProperties()
{
    Name("awing_engine_low_idle_property");
    Group("vehicles");
    Inherit("flyer_eng_low_template");
    SampleList()
    {
      Sample("awing_low", 1.0);

    }
}

SoundProperties()
{
    Name("awing_engine_med_idle_property");
    Group("vehicles");
    Inherit("flyer_eng_hi-mid_template");
    SampleList()
    {
      Sample("awing_mid", 1.0);

    }
}

SoundProperties()
{
    Name("awing_engine_high_idle_property");
    Group("vehicles");
    Inherit("flyer_eng_hi-mid_template");
    SampleList()
    {
      Sample("awing_hi", 1.0);

    }
}


// ----- End Awing Engine Loops ---------------------


// TakeOff and Land Layers --------------------------



SoundLayered()
{ 
    Name("all_fly_awing_land");
  //  Layer("r2_land", "r2_land", 0.0);
    Layer("awing_land_property", "all_fly_awing_land_property", 0.0);
    Layer("awing_airbrakes_on", "all_fly_awing_airbrakes_on", 0.0);  
}

SoundLayered()
{ 
    Name("all_fly_awing_turn_on");
    //Layer("r2_turn_on", "r2_turn_on", 0.0);
    Layer("awing_turn_on_property", "all_fly_awing_turn_on_property", 0.0);
    Layer("awing_airbrakes_on", "all_fly_awing_airbrakes_on", 0.1);  
}

// Played when player leaves vehicle
SoundLayered()
{ 
    Name("all_fly_awing_turn_off");
    //Layer("r2_turn_off", "r2_turn_off", 0.0);
    Layer("awing_turn_off_property", "all_fly_awing_turn_off_property", 0.0);
}


// ----- Start Awing Parameter Graphs --------------------------------------------------------
//Acceleraton             = 50.0
//MinSpeed                = 35.0    = .21
//MidSpeed                = 80.0    = .47 
//MaxSpeed                = 105.0   = .62 Contrails at .68
//BoostSpeed              = 170.0 // Max Speed = 1.0
//BoostAcceleration       = 80.0
// Checked 07/27/05

ParameterGraph()
{
    Name("awing_engine_low_idle_speed");
    ControlPoint(0.0, 0.7);
    //ControlPoint(0.21, 0.8);  // Minspeed
    ControlPoint(0.47, 0.8);    // Midspeed
    //ControlPoint(0.62, 0.8);  // Maxspeed Contrails at .68
    ControlPoint(1.0, 1.0);     // Boostspeed (True max)

}

ParameterGraph()
{
    Name("awing_engine_low_idle_acceleration");
    ControlPoint(-1.0, 0.4);
    ControlPoint(0.0, 0.4);
    //ControlPoint(0.21, 0.8);
    ControlPoint(0.47, 0.8);
    //ControlPoint(0.62, 0.8);
    ControlPoint(1.0, 1.0);
}

ParameterGraph()
{
    Name("awing_engine_med_idle_speed");
    ControlPoint(0.0, 0.5);
    //ControlPoint(0.21, 0.6);
    ControlPoint(0.47, 0.7);
    //ControlPoint(0.62, 0.8);  
    ControlPoint(1.0, 1.0);
}

ParameterGraph()
{
    Name("awing_engine_med_idle_acceleration");
    ControlPoint(-1.0, 0.4);
    ControlPoint(0.0, 0.4);
    //ControlPoint(0.21, 0.6);
    ControlPoint(0.47, 1.0);
    //ControlPoint(0.62, 0.9); 
    ControlPoint(1.0, 1.0);
}

ParameterGraph()
{
    Name("awing_engine_high_idle_speed");
    ControlPoint(0.0, 0.5);
    //ControlPoint(0.21, 0.7);
    ControlPoint(0.47, 0.8);
   //ControlPoint(0.62, 0.8);
    ControlPoint(1.0, 1.0);
}

ParameterGraph()
{
    Name("awing_engine_high_idle_acceleration");
    ControlPoint(-1.0, 0.2);
    ControlPoint(0.0, 0.7);
    //ControlPoint(0.21, 0.3);
    ControlPoint(0.47, 0.8);
    //ControlPoint(0.62, 0.35);
    ControlPoint(1.0, 1.0);
}


ParameterGraph()
{
    Name("awing_engine_boost_idle_speed");
    ControlPoint(0.0, 0.8);
    //ControlPoint(0.21, 0.7);
    //ControlPoint(0.47, 0.8);
    ControlPoint(0.66,0.8);
    ControlPoint(1.0, 1.0);
}

ParameterGraph()
{
    Name("awing_engine_boost_idle_acceleration");
    ControlPoint(-1.0, 0.0);
    ControlPoint(0.0, 0.0);
    //ControlPoint(0.21, 0.3);
    //ControlPoint(0.47, 0.0);
    ControlPoint(0.66, 0.0); //contrails
    ControlPoint(1.0, 1.0);
}

// proximity = 0 when the distance to a target is greater than ProximityMaxDist
//           = 1 when the distance to a target is less than ProximityMinDist

ParameterGraph()
{
    Name("awing_engine_proximity_idle_speed");
    ControlPoint(0.0, 0.8);
    //ControlPoint(0.21, 0.7);
    //ControlPoint(0.47, 0.8);
    ControlPoint(0.66,0.8);
    ControlPoint(1.0, 1.0);
}

ParameterGraph()
{
    Name("awing_engine_proximity_idle_acceleration");
    ControlPoint(-1.0, 0.0);
    ControlPoint(0.0, 0.0);
    //ControlPoint(0.21, 0.3);
    //ControlPoint(0.47, 0.0);
    ControlPoint(0.66, 0.0); //contrails
    ControlPoint(1.0, 1.0);
}

SoundLayered()
{
    Name("awing_engine_layered");
    Layer("awing_engine_low_idle", "awing_engine_low_idle_property", 0.0);
    Layer("awing_engine_med_idle", "awing_engine_med_idle_property", 0.0);
    Layer("awing_engine_high_idle", "awing_engine_high_idle_property", 0.0);
    Layer("awing_engine_damage_idle", "awing_engine_damage_idle_property", 0.0);
    //Layer("awing_engine_boost_idle", "awing_engine_boost_idle_property", 0.0);
    //Layer("awing_engine_proximity_idle", "awing_engine_proximity_idle_property", 0.0);
    

}
SoundParameterized()
{
    Name("all_fly_awing_engine_parameterized");
    SoundLayered("awing_engine_layered");

Layer()
    {
        Name("awing_engine_low_idle");
        ParameterGraph("speed",        "awing_engine_low_idle_speed", "pitch");
        ParameterGraph("acceleration", "awing_engine_low_idle_acceleration","gain");
        ParameterGraph("turnontime",   "engine_turnon_gain",      "gain");
        ParameterGraph("turnofftime",  "engine_turnoff_gain",     "gain");
        ParameterGraph("turnontime",   "engine_turnon_pitch",     "pitch");
        ParameterGraph("turnofftime",  "engine_turnoff_pitch",    "pitch");
    }
    Layer()
    {
        Name("awing_engine_med_idle");
        ParameterGraph("speed",        "awing_engine_med_idle_speed", "pitch");
        ParameterGraph("acceleration", "awing_engine_med_idle_acceleration","gain");
        ParameterGraph("turnontime",   "engine_turnon_gain",      "gain");
        ParameterGraph("turnofftime",  "engine_turnoff_gain",     "gain");
        ParameterGraph("turnontime",   "engine_turnon_pitch",     "pitch");
        ParameterGraph("turnofftime",  "engine_turnoff_pitch",    "pitch");
    }
    Layer()
    {
        Name("awing_engine_high_idle");
        ParameterGraph("speed",        "awing_engine_high_idle_speed", "pitch");
        ParameterGraph("acceleration", "awing_engine_high_idle_acceleration","gain");
        ParameterGraph("turnontime",   "engine_turnon_gain",      "gain");
        ParameterGraph("turnofftime",  "engine_turnoff_gain",     "gain");
        ParameterGraph("turnontime",   "engine_turnon_pitch",     "pitch");
        ParameterGraph("turnofftime",  "engine_turnoff_pitch",    "pitch");
    }
    Layer()
    {
        Name("awing_engine_damage_idle");
        ParameterGraph("health", "engine_health","gain");
        ParameterGraph("turnontime",   "engine_turnon_gain",      "gain");
        ParameterGraph("turnofftime",  "engine_turnoff_gain",     "gain");
    }
    //Layer()
    //{
    //    Name("awing_engine_proximity_idle");
    //    ParameterGraph("proximity",   "awing_engine_proximity_idle_speed", "pitch");
    //    ParameterGraph("proximity",   "awing_engine_high_idle_acceleration","gain");
    //}
    //Layer()
    //{
    //        Name("awing_engine_boost_idle");
    //        ParameterGraph("speed",        "awing_engine_boost_idle_speed", "pitch");
    //        ParameterGraph("acceleration", "awing_engine_boost_idle_acceleration","gain");
    //}
}
// ----- End Awing Parameter Graphs ----------------------------------------------------------
