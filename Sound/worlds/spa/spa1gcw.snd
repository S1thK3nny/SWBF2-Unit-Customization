// Soundspace Start ----------------------------------------------

// Soundspace Start ----------------------------------------------




// --- Start Medium Metal Room ----
#ifplatform pc
I3DL2ReverbPreset()
{
    Name("stoneroom");
    RoomGain(1.0);
    RoomHFGain(0.7);
    RoomRollOff(1.0);
    DecayTime(1.0);
    DecayHFRatio(0.3);
    ERGain(0.3);
    ERDelay(0.014);
    ReverbGain(0.2);
    ReverbDelay(0.041);
    Diffusion(100.0);
    Density(100.0);
    HFReference(5000.0);
    HFReference(5000.0);
}
#endifplatform pc

#ifplatform xbox
I3DL2ReverbPreset()
{
    Name("stoneroom");
    RoomGain(1.0);
    RoomHFGain(1.0);
    RoomRollOff(1.0);
    DecayTime(1.0);
    DecayHFRatio(0.3);
    ERGain(0.4);
    ERDelay(0.014);
    ReverbGain(0.2);
    ReverbDelay(0.041);
    Diffusion(100.0);
    Density(100.0);
    HFReference(5000.0);
}
#endifplatform xbox

#ifplatform ps2
I3DL2ReverbPreset()
{
    Name("stoneroom");
    RoomGain(0.2);
    RoomHFGain(1.0);
    RoomRollOff(1.0);
    DecayTime(1.0);
    DecayHFRatio(0.3);
    ERGain(0.2);
    ERDelay(0.014);
    ReverbGain(0.2);
    ReverbDelay(0.041);
    Diffusion(100.0);
    Density(100.0);
    HFReference(5000.0);
}
#endifplatform ps2
// --- End Medium Metal Room ----

// --- Start Hangar ----
#ifplatform pc
I3DL2ReverbPreset()
{
    Name("hanger");
    RoomGain(1.0);
    RoomHFGain(1.0);
    RoomRollOff(1.0);
    DecayTime(4.0);
    DecayHFRatio(0.3);
    ERGain(0.4);
    ERDelay(0.014);
    ReverbGain(0.15);
    ReverbDelay(0.051);
    Diffusion(100.0);
    Density(100.0);
    HFReference(5000.0);
}
#endifplatform pc

#ifplatform xbox
I3DL2ReverbPreset()
{
    Name("hanger");
    RoomGain(1.0);
    RoomHFGain(1.0);
    RoomRollOff(1.0);
    DecayTime(4.0);
    DecayHFRatio(0.3);
    ERGain(0.4);
    ERDelay(0.014);
    ReverbGain(0.15);
    ReverbDelay(0.051);
    Diffusion(100.0);
    Density(100.0);
    HFReference(5000.0);
}
#endifplatform xbox

#ifplatform ps2
I3DL2ReverbPreset()
{
    Name("hanger");
    RoomGain(0.1);
    RoomHFGain(1.0);
    RoomRollOff(1.0);
    DecayTime(4.0);
    DecayHFRatio(0.3);
    ERGain(0.2);
    ERDelay(0.014);
    ReverbGain(0.15);
    ReverbDelay(0.051);
    Diffusion(100.0);
    Density(100.0);
    HFReference(5000.0);
}
#endifplatform ps2
// --- End Hangar ----



// ---- Start Space declarations ----
Space()
{
    Name("hangar");
    I3DL2ReverbPreset("hanger");
    DirectGain(0.8);
    DirectHFGain(0.8);
    RoomGain(1.0);
    RoomHFGain(1.0);
    RoomRollOffFactor(1.0);
    ObstructionHFGain(0.0);
    ObstructionLFRatio(1.0);
    OcclusionHFGain(0.0);
    OcclusionLFRatio(1.0);
}




Space()
{
    Name("engineroom");
    I3DL2ReverbPreset("stoneroom");
    DirectGain(0.9);
    DirectHFGain(0.9);
    RoomGain(0.3);
    RoomHFGain(0.3);
    RoomRollOffFactor(1.0);
    ObstructionHFGain(0.0);
    ObstructionLFRatio(1.0);
    OcclusionHFGain(0.0);
    OcclusionLFRatio(1.0);

}

Space()
{
    Name("serverroom");
    I3DL2ReverbPreset("stoneroom");
    DirectGain(0.9);
    DirectHFGain(0.9);
    RoomGain(0.3);
    RoomHFGain(0.3);
    RoomRollOffFactor(1.0);
    ObstructionHFGain(0.0);
    ObstructionLFRatio(1.0);
    OcclusionHFGain(0.0);
    OcclusionLFRatio(1.0);
    ConnectedList()
    {
        Space("engineroom", 0.7)         
    }
}

Space()
{
    Name("shieldgenroom");
    I3DL2ReverbPreset("stoneroom");
    DirectGain(0.9);
    DirectHFGain(0.9);
    RoomGain(0.3);
    RoomHFGain(0.3);
    RoomRollOffFactor(1.0);
    ObstructionHFGain(0.0);
    ObstructionLFRatio(1.0);
    OcclusionHFGain(0.0);
    OcclusionLFRatio(1.0);
    ConnectedList()
    {
        Space("hangar", 0.95)
        Space("engineroom", 0.7)              
        Space("serverroom", 0.7)                        
    }
}


Space()
{
    Name("commandroom");
    I3DL2ReverbPreset("stoneroom");
    DirectGain(0.9);
    DirectHFGain(0.9);
    RoomGain(0.3);
    RoomHFGain(0.3);
    RoomRollOffFactor(1.0);
    ObstructionHFGain(0.0);
    ObstructionLFRatio(1.0);
    OcclusionHFGain(0.0);
    OcclusionLFRatio(1.0);
    ConnectedList()
    {
        Space("hangar", 0.4)
        Space("engineroom", 0.3)
        Space("serverroom", 0.3)                 
        Space("shieldgenroom", 0.4)                 
    }
}
// ---- End Space declarations ----


// Soundspace End -----------------------------------------------------

// ----- Ambient Environment Streams Start ------------------------------

// IMP Soundstreams --------------------------


SoundStreamProperties()
{
    Name("imp_amb_hangar");
    Group("ambientenv");
    Inherit("ambientfx_template");
    Stream("spa");
    Gain(0.7);
    SegmentList()
    {
        Segment("imp_amb_hangar", 1.0);
    }
}

SoundStreamProperties()
{
    Name("imp_amb_engineroom");
    Group("ambientenv");
    Inherit("ambientfx_template");
    Stream("spa");
    Gain(0.7);
    SegmentList()
    {
        Segment("amb_engineroom", 1.0);
    }
}

SoundStreamProperties()
{
    Name("imp_amb_commandroom");
    Group("ambientenv");
    Inherit("ambientfx_template");
    Stream("spa");
    Gain(0.7);
    SegmentList()
    {
        Segment("imp_amb_commandroom", 1.0);
    }
}

SoundStreamProperties()
{
    Name("imp_amb_shieldgenroom");
    Group("ambientenv");
    Inherit("ambientfx_template");
    Stream("spa");
    Gain(0.7);
    SegmentList()
    {
        Segment("amb_engineroom", 1.0);
    }
}

SoundStreamProperties()
{
    Name("imp_amb_serverroom");
    Group("ambientenv");
    Inherit("ambientfx_template");
    Stream("spa");
    Gain(0.7);
    SegmentList()
    {
        Segment("imp_amb_commandroom", 1.0);
    }
}

SoundStreamProperties()
{
    Name("gcw_amb_space");
    Group("ambientenv");
    Inherit("ambientfx_template");
    Stream("spa");
    Gain(0.7);
    SegmentList()
    {
        Segment("gcw_amb_space", 1.0);
    }
}
SoundStreamProperties()
{
    Name("cw_amb_space");
    Group("ambientenv");
    Inherit("ambientfx_template");
    Stream("spa");
    Gain(0.7);
    SegmentList()
    {
        Segment("cw_amb_space", 1.0);
    }
}
// All Soundspaces -----------------------------

SoundStreamProperties()
{
    Name("all_amb_hangar");
    Group("ambientenv");
    Inherit("ambientfx_template");
    Gain(0.7);
    Stream("spa");
    SegmentList()
    {
        Segment("all_amb_hangar", 1.0);
    }
}

SoundStreamProperties()
{
    Name("all_amb_engineroom");
    Group("ambientenv");
    Inherit("ambientfx_template");
    Gain(0.7);
    Stream("spa");
    SegmentList()
    {
        Segment("amb_engineroom", 1.0);
    }
}

SoundStreamProperties()
{
    Name("all_amb_commandroom");
    Group("ambientenv");
    Inherit("ambientfx_template");
    Gain(0.7);
    Stream("spa");
    SegmentList()
    {
        Segment("all_amb_commandroom", 1.0);
    }
}

SoundStreamProperties()
{
    Name("all_amb_shieldgenroom");
    Group("ambientenv");
    Inherit("ambientfx_template");
    Stream("spa");
    Gain(0.7);
    SegmentList()
    {
        Segment("amb_engineroom", 1.0);
    }
}

SoundStreamProperties()
{
    Name("all_amb_serverroom");
    Group("ambientenv");
    Inherit("ambientfx_template");
    Gain(0.7);
    Stream("spa");
    SegmentList()
    {
        Segment("all_amb_commandroom", 1.0);
    }
}

// CIS Soundstreams --------------------------


SoundStreamProperties()
{
    Name("cis_amb_hangar");
    Group("ambientenv");
    Inherit("ambientfx_template");
    Stream("spa");
    Gain(0.7);
    SegmentList()
    {
        Segment("cis_amb_hangar", 1.0);
    }
}

SoundStreamProperties()
{
    Name("cis_amb_engineroom");
    Group("ambientenv");
    Inherit("ambientfx_template");
    Gain(0.7);
    Stream("spa");
    SegmentList()
    {
        Segment("amb_engineroom", 1.0);
    }
}

SoundStreamProperties()
{
    Name("cis_amb_commandroom");
    Group("ambientenv");
    Inherit("ambientfx_template");
    Gain(0.7);
    Stream("spa");
    SegmentList()
    {
        Segment("cis_commandroom", 1.0);
    }
}

SoundStreamProperties()
{
    Name("cis_amb_shieldgenroom");
    Group("ambientenv");
    Inherit("ambientfx_template");
    Stream("spa");
    Gain(0.7);
    SegmentList()
    {
        Segment("amb_engineroom", 1.0);
    }
}

SoundStreamProperties()
{
    Name("cis_amb_serverroom");
    Group("ambientenv");
    Inherit("ambientfx_template");
    Stream("spa");
    Gain(0.7);
    SegmentList()
    {
        Segment("cis_commandroom", 1.0);
    }
}


// Rep Soundspaces -----------------------------

SoundStreamProperties()
{
    Name("rep_amb_hangar");
    Group("ambientenv");
    Inherit("ambientfx_template");
    Stream("spa");
    Gain(0.7);
    SegmentList()
    {
        Segment("all_amb_hangar", 1.0);
    }
}

SoundStreamProperties()
{
    Name("rep_amb_engineroom");
    Group("ambientenv");
    Inherit("ambientfx_template");
    Gain(0.7);
    Stream("spa");
    SegmentList()
    {
        Segment("amb_engineroom", 1.0);
    }
}

SoundStreamProperties()
{
    Name("rep_amb_commandroom");
    Group("ambientenv");
    Inherit("ambientfx_template");
    Gain(0.7);
    Stream("spa");
    SegmentList()
    {
        Segment("all_amb_commandroom", 1.0);
    }
}

SoundStreamProperties()
{
    Name("rep_amb_shieldgenroom");
    Group("ambientenv");
    Inherit("ambientfx_template");
    Gain(0.7);
    Stream("spa");
    SegmentList()
    {
        Segment("amb_engineroom", 1.0);
    }
}

SoundStreamProperties()
{
    Name("rep_amb_serverroom");
    Group("ambientenv");
    Inherit("ambientfx_template");
    Stream("spa");
    SegmentList()
    {
        Segment("all_amb_commandroom", 1.0);
    }
}



// ----- Ambient Environment Streams End ---------------------------

// ----- Prop Ambient Effects Start --------------------------------

// Destructable Asteroids

SoundProperties()
{
    Name("com_asteroid_break"); // large explosion near
    Group("Explosion");
    Inherit("explosion_template");
    PitchDev(0.15);
    MinDistance(200.0);
    MuteDistance(1000.0);
    MaxDistance(1000.0);
    RollOff(1.0);
    SampleList()
    {
        Sample("avalanc2", 1.0);
    }
}

SoundProperties()
{
    Name("com_asteroid_exp"); // large explosion near
    Group("Explosion");
    Inherit("explosion_template");
    PitchDev(0.15);
    MinDistance(200.0);
    MuteDistance(1000.0);
    MaxDistance(1000.0);
    RollOff(1.0);
    SampleList()
    {
        Sample("exp_obj_large01", 0.25);
        Sample("exp_obj_large02", 0.25);
        Sample("exp_obj_large04", 0.25);
        Sample("exp_obj_large05", 0.25);
    }
}

// Captial Ship Engine -------------------------

SoundProperties()
{
    Name("sd_engine_amb"); 
    Group("Explosion");
    Inherit("ambientemt_static_template");
    Gain(0.3);
    Pitch(0.9);
    PitchDev(0.15);
    MinDistance(200.0);
    MuteDistance(500.0);
    MaxDistance(500.0);
    RollOff(5.0);
    Looping(1);
    SampleList()
    {
        Sample("eng_v-wing_low_lp", 1.0);
    }
}





// Rumble Regions ---------------------------------

SoundProperties()
{
    Name("hoth_rumble")
    Pitch(1.0);
    PitchDev(0.0);
    Gain(1.0);
    GainDev(0.0);
    ReverbGain(1.0);
    Bus("soundfx");
    Looping(0);
    Pan(0.0);
    MinDistance(15.0);
    MuteDistance(100.0);
    MaxDistance(100.0);
    RollOff(0.0);
    Mode3D(1);
    Bias(0.0001);
    Priority(0.8);
    SampleList()
    {
        Sample("rumble1", 0.5);
        Sample("rumble2", 0.5);
    }
}


// ShieldGen Room ---------------------------------


SoundProperties()
{
    Name("shieldgen_amb"); 
    Group("Prop");
    Inherit("ambientemt_static_template");
    Gain(0.7);
    PitchDev(0.15);
   MinDistance(20.0);
    MuteDistance(50.0);
    MaxDistance(50.0);
    RollOff(1.0);
    Looping(1);
    SampleList()
    {
        Sample("energy_loop", 1.0);
    }
}


SoundProperties()
{
    Name("liquidgen")
    Group("props");
    Inherit("props_template");
    #ifplatform pc
    Gain(0.8);
    #endifplatform pc
    #ifplatform xbox
    Gain(0.6);
    #endifplatform xbox
    #ifplatform ps2
    Gain(0.6);
    #endifplatform ps2
    Looping(1);
    Pitch(1.0);
    PitchDev(0.0);
    Rolloff(2)
    MinDistance(15)
    MaxDistance(60)
    MuteDistance(60)
    SampleList()
    {
        Sample("engine_cylinders", 1.0);
    }
}



SoundProperties()
{
    Name("shieldgen_fanmotor"); 
    Group("Prop");
    Inherit("ambientemt_static_template");
    #ifplatform ps2 xbox
    Gain(0.75)
    #endifplatform ps2 xbox
    #ifplatform pc
    Gain(0.75)
    #endifplatform pc
    Looping(1);
    MinDistance(15);
    MaxDistance(35)
    MuteDistance(35)
    RollOff(1.0);
    SampleList()
    {
        Sample("bigfan01", 1.0);
    }
}

SoundProperties()
{
    Name("energy_loop")
    Group("props");
    Inherit("props_template");
    #ifplatform pc
    Gain(1.0);
    #endifplatform pc
    #ifplatform xbox
    Gain(1.0);
    #endifplatform xbox
    #ifplatform ps2
    Gain(1.0);
    #endifplatform ps2
    Looping(1);
    Pitch(1.0);
    PitchDev(0.0);
    MinDistance(15)
    MaxDistance(50)
    MuteDistance(50)
    Rolloff(1)
    SampleList()
    {
        Sample("ammo_blaster_lp01", 0.5);
        Sample("ammo_blaster_lp04", 0.5);
    }
}

SoundProperties()
{
    Name("beam_loop")
    Group("props");
    Inherit("props_template");
    #ifplatform pc
    Gain(0.8);
    #endifplatform pc
    #ifplatform xbox
    Gain(0.7);
    #endifplatform xbox
    #ifplatform ps2
    Gain(0.7);
    #endifplatform ps2
    Looping(1);
    Pitch(1.4);
    PitchDev(0.0);
    MinDistance(15)
    MaxDistance(50)
    MuteDistance(50)
    Rolloff(1)
    SampleList()
    {
        Sample("wpn_gunship_laser_lp", 1.0);
    }
}

SoundProperties()
{
    Name("beam_loop2")
    Group("props");
    Inherit("props_template");
    #ifplatform pc
    Gain(0.8);
    #endifplatform pc
    #ifplatform xbox
    Gain(0.7);
    #endifplatform xbox
    #ifplatform ps2
    Gain(0.7);
    #endifplatform ps2
    Looping(1);
    Pitch(1.6);
    PitchDev(0.0);
    MinDistance(15)
    MaxDistance(50)
    MuteDistance(50)
    Rolloff(1)
    SampleList()
    {
        Sample("wpn_gunship_laser_lp", 1.0);
    }
}


SoundProperties()
{
    Name("beam_loop3")
    Group("props");
    Inherit("props_template");
    #ifplatform pc
    Gain(0.8);
    #endifplatform pc
    #ifplatform xbox
    Gain(0.7);
    #endifplatform xbox
    #ifplatform ps2
    Gain(0.7);
    #endifplatform ps2
    Looping(1);
    Pitch(1.8);
    PitchDev(0.0);
    MinDistance(15)
    MaxDistance(50)
    MuteDistance(50)
    Rolloff(1)
    SampleList()
    {
        Sample("wpn_gunship_laser_lp", 1.0);
    }
}

SoundProperties()
{
    Name("beam_loop4")
    Group("props");
    Inherit("props_template");
    #ifplatform pc
    Gain(0.8);
    #endifplatform pc
    #ifplatform xbox
    Gain(0.7);
    #endifplatform xbox
    #ifplatform ps2
    Gain(0.7);
    #endifplatform ps2
    Looping(1);
    Pitch(2.0);
    PitchDev(0.0);
    MinDistance(15)
    MaxDistance(50)
    MuteDistance(50)
    Rolloff(1)
    SampleList()
    {
        Sample("wpn_gunship_laser_lp", 1.0);
    }
}




// Doors -------------------------------

SoundProperties()
{
    Name("door_open");
    Pitch(1.0);
    PitchDev(0.1);
    Gain(1.0);
    GainDev(0.05);
    ReverbGain(1.0);
    Bus("soundfx");
    Looping(0);
    Pan(0.0);
    MinDistance(7.0);
    SpaceDistance(5)
    MuteDistance(50.0);
    MaxDistance(50.0);
    RollOff(1.0);
    Mode3D(1);
    Bias(0.0001);
    Priority(0.8);
    SpaceDistance(7.0)
    SampleList()
    {
        Sample("door_open", 1.0);
    }
}

SoundProperties()
{
    Name("door_close");
    Pitch(1.0);
    PitchDev(0.1);
    Gain(1.0);
    GainDev(0.05);
    ReverbGain(1.0);
    Bus("soundfx");
    Looping(0);
    Pan(0.0);
    MinDistance(7.0);
    MuteDistance(50.0);
    MaxDistance(50.0);
    RollOff(1.0);
    Mode3D(1);
    Bias(0.0001);
    Priority(0.8);
    SpaceDistance(7.0)
    SampleList()
    {
        Sample("door_close", 1.0);
    }
}



// ----- Prop Ambient Effects End ----------------------------------

// To be obsolete properties once they straighten out all the turrets
SoundProperties()
{
    Name("tur_weap_fly_chaingun_spin");
    Group("weapons");
    Inherit("veh_weapon_template");
    #ifplatform pc
    Gain(0.3);
    #endifplatform pc
    #ifplatform xbox
    Gain(0.3);
    #endifplatform xbox
    #ifplatform ps2
    Gain(0.2);
    #endifplatform ps2
    MinDistance(15.0);
    Pitch(0.55);
    Looping(1);
    Rolloff(3.0);
    SampleList()
    {
        Sample("wpn_chaingun_spin", 1.0);
    }
}

SoundProperties()
{
    Name("tur_weap_fly_chaingun_fire");
    Group("weapons");
    Inherit("veh_weapon_template");
    Pitch(0.7)
    Looping(1);
    SampleList()
    {
        Sample("vehicle_chaingun_fire", 1.0);
    }
}


SoundProperties()
{
    Name("tur_weap_spa_stinger_fire");
    Group("weapons");
    Inherit("veh_weapon_template");
    SampleList()
    {
        //Sample("wpn_drdFghtr_missile_fire", 1.0);
        Sample("wpn_hailfire_missile_fire", 1.0);        
    }
}

