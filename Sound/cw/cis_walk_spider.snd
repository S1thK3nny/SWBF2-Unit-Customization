// CIS_walk_Spider --------------------------------------
// ----- Spider Walker Weapons
SoundProperties()
{
    Name("cis_weap_walk_spider_beam_fire");
    Group("weapons");
    Inherit("veh_weapon_template");
    Gain(1.0);
    SampleList()
    {
        Sample("wpn_spderWalker_laser_fire", 1.0);
    }
}

SoundProperties()
{
    Name("cis_weap_walk_spider_beam_loop");
    Group("weapons");
    Inherit("veh_weapon_template");
    SampleList()
    {
        Sample("wpn_spderWalker_laser_lp", 1.0);
    }
}


// ----- Spider Walker Engine

SoundProperties()
{
    Name("spiderwalker_engine_high_idle_property");
    Group("vehicles");
    Inherit("vehicle_eng_hi-mid_template");
    SampleList()
    {
        Sample("eng_spiderWalker_hi_lp", 1.0);
    }
}

SoundProperties()
{
    Name("spiderwalker_engine_med_idle_property");
    Group("vehicles");
    Inherit("vehicle_eng_hi-mid_template");
    SampleList()
    {
        Sample("eng_spiderWalker_mid_lp", 1.0);
    }
}

SoundProperties()
{
    Name("spiderwalker_engine_low_idle_property");
    Group("vehicles");
    Inherit("vehicle_eng_low_template");
    SampleList()
    {
        Sample("eng_spiderWalker_low_lp", 1.0);
    }
}

// ----- Spider Walker Hydraulics -------

SoundProperties()
{
    Name("cis_walk_spider_legup");
    Pitch(1.0);
    PitchDev(0.15);
    Gain(0.5);
    GainDev(0.0);
    ReverbGain(1.0);
    Bus("soundfx");
    Looping(0);
    Pan(0.0);
    MinDistance(15.0);
    MuteDistance(150.0);
    MaxDistance(150.0);
    RollOff(3.0);
    Mode3D(1);
    Bias(0.0001);
    Priority(0.7);
    CyclePlayback(1);
    SampleList()
    {
        Sample("hyd_spiderWalker_01", 1.0);
        Sample("hyd_spiderWalker_02", 1.0);
        Sample("hyd_spiderWalker_03", 1.0);
        Sample("hyd_spiderWalker_04", 1.0);
    }
}

// ----- Spider Walker Footsteps -------

SoundProperties()
{
    Name("cis_walk_spider_step_layered");
    Pitch(1.0);
    PitchDev(0.15);
    Gain(0.35);
    GainDev(0.05);
    ReverbGain(1.0);
    Bus("soundfx");
    Looping(0);
    Pan(0.0);
    MinDistance(15.0);
    MuteDistance(350.0);
    MaxDistance(350.0);
    RollOff(2.0);
    Mode3D(1);
    Bias(0.0001);
    Priority(0.7);
    CyclePlayback(1);
    SampleList()
    {
        Sample("fs_spiderWalker_01", 0.33);
        Sample("fs_spiderWalker_02", 0.33);
        Sample("fs_spiderWalker_03", 0.33);
    }
}

ParameterGraph()
{
    Name("spiderwalker_engine_low_idle_speed");
    ControlPoint(0.0, 0.8);
    ControlPoint(0.5, 0.9);
    ControlPoint(1.0, 1.0);

}

ParameterGraph()
{
    Name("spiderwalker_engine_low_idle_acceleration");
    ControlPoint(-1.0, 0.6);
    ControlPoint(0.0, 0.6);
    ControlPoint(0.5, 0.9);
    ControlPoint(1.0, 1.0);
}

ParameterGraph()
{
    Name("spiderwalker_engine_med_idle_speed");
    ControlPoint(0.0, 0.7);
    ControlPoint(0.5, 0.9);
    ControlPoint(1.0, 1.0);
}

ParameterGraph()
{
    Name("spiderwalker_engine_med_idle_acceleration");
    ControlPoint(-1.0, 0.6);
    ControlPoint(0.0, 0.6);
    ControlPoint(0.5, 0.9);
    ControlPoint(1.0, 1.0);
}

ParameterGraph()
{
    Name("spiderwalker_engine_high_idle_speed");
    ControlPoint(0.0, 0.7);
    ControlPoint(0.5, 0.9);
    ControlPoint(1.0, 1.0);
}

ParameterGraph()
{
    Name("spiderwalker_engine_high_idle_acceleration");
    ControlPoint(-1.0, 0.6);
    ControlPoint(0.0, 0.6);
    ControlPoint(0.5, 0.9);
    ControlPoint(1.0, 1.0);
}


ParameterGraph()
{
    Name("spiderwalker_engine_health");
    ControlPoint(0.1, 2.0);
    ControlPoint(0.3, 2.0);
    ControlPoint(0.4, 1.5);
    ControlPoint(0.5, 1.0);
    ControlPoint(0.85, 0.0);
    ControlPoint(1.0, 0.0);
}

SoundLayered()
{
    Name("spiderwalker_engine_layered");
    Layer("spiderwalker_engine_low_idle", "spiderwalker_engine_low_idle_property", 0.0);
    Layer("spiderwalker_engine_med_idle", "spiderwalker_engine_med_idle_property", 0.0);
    Layer("spiderwalker_engine_high_idle", "spiderwalker_engine_high_idle_property", 0.0);
}

SoundParameterized()
{
    Name("cis_walk_spiderwalker_engine_parameterized");
    SoundLayered("spiderwalker_engine_layered");
Layer()
    {
        Name("spiderwalker_engine_low_idle");
        ParameterGraph("speed",        "spiderwalker_engine_low_idle_speed", "pitch");
        ParameterGraph("acceleration", "spiderwalker_engine_low_idle_acceleration","gain");
        ParameterGraph("turnontime",   "engine_turnon_gain",      "gain");
        ParameterGraph("turnofftime",  "engine_turnoff_gain",     "gain");
        ParameterGraph("turnontime",   "engine_turnon_pitch",     "pitch");
        ParameterGraph("turnofftime",  "engine_turnoff_pitch",    "pitch");
    }
    Layer()
    {
        Name("spiderwalker_engine_med_idle");
        ParameterGraph("speed",        "spiderwalker_engine_med_idle_speed", "pitch");
        ParameterGraph("acceleration", "spiderwalker_engine_med_idle_acceleration","gain");
        ParameterGraph("turnontime",   "engine_turnon_gain",      "gain");
        ParameterGraph("turnofftime",  "engine_turnoff_gain",     "gain");
        ParameterGraph("turnontime",   "engine_turnon_pitch",     "pitch");
        ParameterGraph("turnofftime",  "engine_turnoff_pitch",    "pitch");
    }
    Layer()
    {
        Name("spiderwalker_engine_high_idle");
        ParameterGraph("speed",        "spiderwalker_engine_high_idle_speed", "pitch");
        ParameterGraph("acceleration", "spiderwalker_engine_high_idle_acceleration","gain");
        ParameterGraph("turnontime",   "engine_turnon_gain",      "gain");
        ParameterGraph("turnofftime",  "engine_turnoff_gain",     "gain");
        ParameterGraph("turnontime",   "engine_turnon_pitch",     "pitch");
        ParameterGraph("turnofftime",  "engine_turnoff_pitch",    "pitch");
    }
}