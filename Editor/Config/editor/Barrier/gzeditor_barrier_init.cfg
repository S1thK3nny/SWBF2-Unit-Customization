// Start Barrier Edit Control
CreateControl("EditBarrier", "STATIC")
{
    Pos(0, 80);
    Size(115, 470);
    ColorGroup("INPUTBOX");
    CreateControl("EditBarrierTitle", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(0, 0);
        Size(115, 12);
        Font("SMALL");
        JustifyText("VCENTER");
        Text("EDIT BARRIER");
        Style("TRANSPARENT");
    }
    // Start Barrier Action Mode Control
    CreateControl("ActionTitle", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(5, 12);
        Size(95, 10);
        Font("SMALL");
        JustifyText("LEFT");
        Text("Action:");
        Style("TRANSPARENT");
    }
    CreateControl("action1", "BUTTON")
    {
        ColorGroup("DEFAULT");
        Pos(5, 24);
        Size(95, 15);
        Font("SMALL");
        Style("ROLLOVER", "RADIO");
        Text("New");
        Cursor("Highlight");
        UseVar("editor.barrier.actionmode");
        Value(1);
        TipText("Create a new Barrier");
    }
    CreateControl("action2", "BUTTON")
    {
        ColorGroup("DEFAULT");
        Pos(5, 41);
        Size(95, 15);
        Font("SMALL");
        Style("ROLLOVER", "RADIO");
        Text("Move");
        Cursor("Highlight");
        UseVar("editor.barrier.actionmode");
        Value(2);
        TipText("Move the currently selected Barrier");
    }
    CreateControl("action3", "BUTTON")
    {
        ColorGroup("DEFAULT");
        Pos(5, 58);
        Size(95, 15);
        Font("SMALL");
        Style("ROLLOVER", "RADIO");
        Text("Rotate");
        Cursor("Highlight");
        UseVar("editor.barrier.actionmode");
        Value(3);
        TipText("Rotate the currently selected Barrier");
    }
    CreateControl("action4", "BUTTON")
    {
        ColorGroup("DEFAULT");
        Pos(5, 75);
        Size(95, 15);
        Font("SMALL");
        Style("ROLLOVER", "RADIO");
        Text("Stretch");
        Cursor("Highlight");
        UseVar("editor.barrier.actionmode");
        Value(4);
        TipText("Stretch the constrains of a Barrier");
    }
    // End Barrier Action Mode Control

    // Start Connection Filter Control
    CreateControl("FilterTitle", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(5, 110);
        Size(95, 10);
        Font("SMALL");
        JustifyText("LEFT");
        Text("Ban:");
        Style("TRANSPARENT");
        TipText("Select what unit types the", "currently selected barrier will ban");
    }
    CreateControl("Filter1", "BUTTON")
    {
        Pos(5, 125);
        Size(95, 15);
        Font("SMALL");
        Text("Filter1");
        Cursor("Highlight");
        Style("ROLLOVER", "TOGGLE");
        UseVar("editor.barrier.filter1");
        TipText("Toggle bannination of Soldiers from the selected Barrier");
    }
    CreateControl("Filter2", "BUTTON")
    {
        Pos(5, 140);
        Size(95, 15);
        Font("SMALL");
        Text("Filter2");
        Cursor("Highlight");
        Style("ROLLOVER", "TOGGLE");
        UseVar("editor.barrier.filter2");
        TipText("Toggle bannination of Hover Units from the selected Barrier");
    }
    CreateControl("Filter3", "BUTTON")
    {
        Pos(5, 155);
        Size(95, 15);
        Font("SMALL");
        Text("Filter3");
        Cursor("Highlight");
        Style("ROLLOVER", "TOGGLE");
        UseVar("editor.barrier.filter3");
        TipText("Toggle bannination of Small Units from the selected Barrier");
    }
    CreateControl("Filter4", "BUTTON")
    {
        Pos(5, 170);
        Size(95, 15);
        Font("SMALL");
        Text("Filter4");
        Cursor("Highlight");
        Style("ROLLOVER", "TOGGLE");
        UseVar("editor.barrier.filter4");
        TipText("Toggle bannination of Medium Units from the selected Barrier");
    }
    CreateControl("Filter5", "BUTTON")
    {
        Pos(5, 185);
        Size(95, 15);
        Font("SMALL");
        Text("Filter5");
        Cursor("Highlight");
        Style("ROLLOVER", "TOGGLE");
        UseVar("editor.barrier.filter5");
        TipText("Toggle bannination of Huge Units from the selected Barrier");
    }
    CreateControl("Filter6", "BUTTON")
    {
        Pos(5, 200);
        Size(95, 15);
        Font("SMALL");
        Text("Filter6");
        Cursor("Highlight");
        Style("ROLLOVER", "TOGGLE");
        UseVar("editor.barrier.filter6");
        TipText("Toggle bannination of Flyer from the selected Barrier");
    }
    CreateControl("Filter7", "BUTTON")
    {
        Pos(5, 215);
        Size(95, 15);
        Font("SMALL");
        Text("Filter7");
        Cursor("Highlight");
        Style("ROLLOVER", "TOGGLE");
        UseVar("editor.barrier.filter7");
    }
    // End Connection Filter Control

    // Start Toggle Height Control
    CreateControl("ToggleHeight", "BUTTON")
    {
        Pos(5, 236);
        Size(95, 16);
        Font("SMALL");
        Text("Toggle Height");
        Cursor("Highlight");
        Style("ROLLOVER", "TOGGLE");
        UseVar("editor.barrier.toggleheight");
        TipText("Toggle the visible height", "representation of the Barriers");
    }
    CreateControl("HeightUnitsTitle", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(5, 255);
        Size(80, 10);
        Font("SMALL");
        JustifyText("LEFT");
        Text("Height:");
        Style("Transparent");
        TipText("Set the height for the visual", "representation of barriers");
    }
    CreateControl("HeightUnits", "EDIT")
    {
        ColorGroup("INPUTBOX2");
        Pos(5, 268);
        Size(45, 15);
        Font("SMALL");
        Style("ROLLOVER");
        Cursor("Highlight");
        UseVar("editor.barrier.height");
        MaxLength(6);
    }
    CreateControl("HeightSlider", "SLIDER")
    {
        ColorGroup("INPUTBOX2");
        Pos(55, 268);
        Size(45, 15);
        Font("SMALL");
        Style("ROLLOVER");
        Cursor("Highlight");
        UseVar("editor.barrier.height");
        SliderPageSize(300.0);
    }
    CreateControl("AlphaUnitsTitle", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(5, 286);
        Size(80, 10);
        Font("SMALL");
        JustifyText("LEFT");
        Text("Alpha:");
        Style("Transparent");
        TipText("Set the Alpha for the visual height", "representations of the Barriers", "0 = Transparent", "255 = Fully Opaque");
    }
    CreateControl("AlphaUnits", "EDIT")
    {
        ColorGroup("INPUTBOX2");
        Pos(5, 298);
        Size(30, 15);
        Font("SMALL");
        Style("ROLLOVER");
        Cursor("Highlight");
        UseVar("editor.barrier.alpha");
        MaxLength(6);
    }
    CreateControl("AlphaSlider", "SLIDER")
    {
        ColorGroup("INPUTBOX2");
        Pos(40, 298);
        Size(60, 15);
        Font("SMALL");
        Style("ROLLOVER");
        Cursor("Highlight");
        UseVar("editor.barrier.alpha");
        SliderPageSize(65.0);
    }
    CreateControl("NameTitle", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(5, 314);
        Size(80, 12);
        Font("SMALL");
        JustifyText("LEFT");
        Text("Name:");
        Style("TRANSPARENT");
        TipText("Name the currently selected Barrier");
    }
    // End Toggle Height Control

    // Start Barrier Name and List Control
    CreateControl("Name", "EDIT")
    {
        ColorGroup("INPUTBOX2");
        Pos(5, 326);
        Size(95, 18);
        Font("SMALL");
        Style("ROLLOVER");
        Cursor("Highlight");
        UseVar("editor.barrier.name");
    }
    CreateControl("listTitle", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(5, 344);
        Size(80, 10);
        Font("SMALL");
        JustifyText("LEFT");
        Text("Barrier List:");
        Style("Transparent");
        TipText("List of Barriers in the level");
    }
    CreateControl("BarrierListSlider", "LISTSLIDER")
    {
        Orientation("VERTICAL");
        Position(90, 355);
        Size(10, 80);
        Style("BUTTONS", "ROLLOVER");
        Cursor("Highlight");
    }
    CreateControl("BarrierList", "LISTBOX")
    {
        ColorGroup("LISTBOX");
        Pos(5, 355);
        Size(85, 80);
        CellSize(85, 12);
        BorderSize(5);
        BevelSize(3);
        SliderPadding(1);
        Font("SMALL");
        ItemConfig()
        {
            Style("ROLLOVER", "RADIO");
        }
        Style("CHILDROLLOVER");
        UseVar("editor.barrier.selection");
        UseSlider("<BarrierListSlider");
    }
    // End Barrier Name and List Control


    // Barrier display stuff
    CreateControl("snapAllNow", "BUTTON")
    {
        Pos(5, 445);
        Size(105, 10);
        Font("SMALL");
        Text("''Snap'' All To");
        Cursor("Highlight");
        Style("ROLLOVER");
	NotifyParent("Button::Press", "snapNow");
	TipText("Snap all Barriers to the current terrain height");
    }
    CreateControl("snapAllNow2", "BUTTON")
    {
        Pos(5, 455);
        Size(105, 10);
        Font("SMALL");
        Text("Terrain");
        Cursor("Highlight");
        Style("ROLLOVER");
	NotifyParent("Button::Press", "snapNow");
	TipText("Snap all Barriers to the current terrain height");
    }
    OnEvent("snapNow")
    {
	Cmd("editor.barrier.snap_to_terrain");
    }
    // end snappage stuff

}
// End Barrier Edit Control

// Start Barrier Show Filter Control
CreateControl("ShowFilterBox", "STATIC")
{
    Pos(115, 80);
    Size(474, 20);
    ColorGroup("INPUTBOX");
    CreateControl("ShowTitle", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(2, 4);
        Size(30, 12);
        Font("SMALL");
        JustifyText("LEFT");
        Text("Show:");
        Style("Transparent");
        TipText("Visually toggle barriers which ban certain units");
    }
    CreateControl("Filter1", "BUTTON")
    {
        Pos(45, 2);
        Size(70, 15);
        Font("SMALL");
        Text("Show Filter1");
        Cursor("Highlight");
        Style("ROLLOVER", "TOGGLE");
        UseVar("editor.barrier.showfilter1");
        TipText("Visually toggle all Barriers that ban Soldiers");
    }
    CreateControl("Filter2", "BUTTON")
    {
        Pos(116, 2);
        Size(70, 15);
        Font("SMALL");
        Text("Show Filter2");
        Cursor("Highlight");
        Style("ROLLOVER", "TOGGLE");
        UseVar("editor.barrier.showfilter2");
        TipText("Visually toggle all Barriers that ban Hover units");
    }
    CreateControl("Filter3", "BUTTON")
    {
        Pos(187, 2);
        Size(70, 15);
        Font("SMALL");
        Text("Show Filter3");
        Cursor("Highlight");
        Style("ROLLOVER", "TOGGLE");
        UseVar("editor.barrier.showfilter3");
        TipText("Visually toggle all Barriers that ban Small Units");
    }
    CreateControl("Filter4", "BUTTON")
    {
        Pos(258, 2);
        Size(70, 15);
        Font("SMALL");
        Text("Show Filter4");
        Cursor("Highlight");
        Style("ROLLOVER", "TOGGLE");
        UseVar("editor.barrier.showfilter4");
        TipText("Visually toggle all Barriers that ban Medium Units");
    }
    CreateControl("Filter5", "BUTTON")
    {
        Pos(329, 2);
        Size(70, 15);
        Font("SMALL");
        Text("Show Filter5");
        Cursor("Highlight");
        Style("ROLLOVER", "TOGGLE");
        UseVar("editor.barrier.showfilter5");
        TipText("Visually toggle all Barriers that ban Huge Units");
    }
    CreateControl("Filter6", "BUTTON")
    {
        Pos(400, 2);
        Size(70, 15);
        Font("SMALL");
        Text("Show Filter6");
        Cursor("Highlight");
        Style("ROLLOVER", "TOGGLE");
        UseVar("editor.barrier.showfilter6");
        TipText("Visually toggle all Barriers that ban Flyers");
    }
    CreateControl("Filter7", "BUTTON")
    {
        Pos(469, 2);
        Size(70, 15);
        Font("SMALL");
        Text("Show Filter7");
        Cursor("Highlight");
        Style("ROLLOVER", "TOGGLE");
        UseVar("editor.barrier.showfilter7");
    }
}
// End Barrier Show Filter Control