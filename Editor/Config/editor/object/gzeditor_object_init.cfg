//
// CREATE OBJECT EDITOR VARIABLES
//
ConfigureVarSys()
{
    CreateInteger("editor.object.list.value", 0);
    SetIntegerRange("editor.object.list.value", 0, 4);
}

ExecOptional("gzeditor_anim_init.cfg");

Cmd("editor.object.useorigin.value 1");
Cmd("editor.object.mode.snap.value 1");


// Start Object Browser Control
CreateControl("ObjectBrowser", "STATIC")
{
    Pos(120,0);
    Size(470, 200);
    Geometry("LEFT", "BOTTOM");
    ColorGroup("INPUTBOX");
    CreateControl("NameListTitle", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(5, 5);
        Size(45, 10);
        Font("SMALL");
        JustifyText("LEFT");
        Text("Name");
        Style("Transparent");
    }
    // Start Object Browser Listbox Sort Controls
    CreateControl("SortByNameBtn", "BUTTON")
    {
        Pos(165, 5);
        Size(38, 12);
        Font("SMALL");
        Text("Sort");
        Cursor("Highlight");
        Style("ROLLOVER", "RADIO");
        UseVar("editor.object.browser.sorttype");
        Value(0);
        TipText("Sorts the list by name");
    }
    CreateControl("ConfigListTitle", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(215, 5);
        Size(20, 10);
        Font("SMALL");
        JustifyText("LEFT");
        Text("Config");
        Style("Transparent");
    }
    CreateControl("SortByConfigBtn", "BUTTON")
    {
        Pos(415, 5);
        Size(38, 12);
        Font("SMALL");
        Text("Sort");
        Cursor("Highlight");
        Style("ROLLOVER", "RADIO");
        UseVar("editor.object.browser.sorttype");
        Value(1);
        TipText("Sorts the list by filename");
    }
    // End Object Browser Listbox Sort Controls
    // Start Object Browser Listbox Controls
    CreateControl("objListSlider", "LISTSLIDER")
    {
        ColorGroup("BACKGROUND");
        Orientation("VERTICAL");
        Position(455, 20);
        Size(10, 120);
        Style("BUTTONS", "ROLLOVER");
        Cursor("Highlight");
    }
    CreateControl("NameListBox", "LISTBOX")
    {
        ColorGroup("LISTBOX");
        Pos(5, 20);
        Size(200, 120);
        CellSize(200, 12);
        SliderPadding(1);
        Font("SMALL");
        Style("CHILDROLLOVER");
        UseVar("editor.object.browser.nameselection");
        UseSlider("<objListSlider");
    }
    CreateControl("ConfigListBox", "LISTBOX")
    {
        ColorGroup("LISTBOX");
        Pos(215, 20);
        Size(250, 120);
        CellSize(240, 12);
        SliderPadding(1);
        Font("SMALL");
        Style("CHILDROLLOVER");
        UseVar("editor.object.browser.configselection");
        UseSlider("<objListSlider");
    }
    // End Object Browser Listbox

    // Start Object Browser Search Controls
    CreateControl("title0", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(5, 145);
        Size(95, 10);
        Font("SMALL");
        JustifyText("LEFT");
        Text("Containing");
        Style("Transparent");
    }
    CreateControl("NamePattern", "EDIT")
    {
        ColorGroup("INPUTBOX2");
        Pos(5, 160);
        Size(200, 15);
        Font("SMALL");
        Style("ROLLOVER");
        Cursor("Highlight");
        UseVar("editor.object.browser.namepattern");
    }
    CreateControl("ConfigPattern", "EDIT")
    {
        ColorGroup("INPUTBOX2");
        Pos(215, 160);
        Size(250, 15);
        Font("SMALL");
        Style("ROLLOVER");
        Cursor("Highlight");
        UseVar("editor.object.browser.configpattern");
    }
    CreateControl("NameCurrentBtn", "BUTTON")
    {
        Pos(5, 180);
        Size(30, 12);
        Font("SMALL");
        Text("Cur");
        Cursor("Highlight");
        Style("ROLLOVER");
        NotifyParent("Button::Press", "NamePatternCurrent");
        TipText("Enter the base name of an object and isolate","that object and any others that share it's name");
    }
    CreateControl("NameAnyBtn", "BUTTON")
    {
        Pos(40, 180);
        Size(30, 12);
        Font("SMALL");
        Text("Any");
        Cursor("Highlight");
        Style("ROLLOVER");
        NotifyParent("Button::Press", "NamePatternAny");
        TipText("Shows Any object in the list regardless of name");
    }
    CreateControl("NameClearBtn", "BUTTON")
    {
        Pos(75, 180);
        Size(25, 12);
        Font("SMALL");
        Text("Clr");
        Cursor("Highlight");
        Style("ROLLOVER");
        NotifyParent("Button::Press", "NamePatternClear");
        TipText("Clears the search box");
    }
    CreateControl("ConfigCurrentBtn", "BUTTON")
    {
        Pos(215, 180);
        Size(30, 12);
        Font("SMALL");
        Text("Cur");
        Cursor("Highlight");
        Style("ROLLOVER");
        NotifyParent("Button::Press", "ConfigPatternCurrent");
        TipText("Enter the base filename of an object and isolate","that object and any others that share it's filename");
    }
    CreateControl("ConfigClearBtn", "BUTTON")
    {
        Pos(280, 180);
        Size(25, 12);
        Font("SMALL");
        Text("Clr");
        Cursor("Highlight");
        Style("ROLLOVER");
        NotifyParent("Button::Press", "ConfigPatternClear");
        TipText("Clears the search box");
    }
    OnEvent("NamePatternCurrent")
    {
        Cmd("editor.object.browser.namere.addcurrent");
    }
    OnEvent("NamePatternAny")
    {
        Cmd("editor.object.browser.namere.addanything");
    }
    OnEvent("ConfigPatternCurrent")
    {
        Cmd("editor.object.browser.configre.addcurrent");
    }
    OnEvent("ConfigPatternClear")
    {
        Cmd("editor.object.browser.configre.clear");
    }
    OnEvent("NamePatternClear")
    {
        Cmd("editor.object.browser.namere.clear");
    }
    // End Object Browser Search Controls
}
// End Object Browser Control

// Start Object Tooltip Control
CreateControl("Tooltip", "STATIC")
{
    Pos(0, 0);
    Size(90, 20);
    ColorGroup("BACKGROUND");
    CreateControl("TooltipLine1", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(5, 5);
        Size(80, 10);
        Font("SMALL");
        JustifyText("LEFT");
        Text("Tooltip");
        Style("Transparent");
    }
    CreateControl("TooltipLine2", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(5, 18);
        Size(80, 10);
        Font("SMALL");
        JustifyText("LEFT");
        Text("Tooltip");
        Style("Transparent");
    }
}
// End Object Tooltip Control

// Start Object Find Control
CreateControl("FindObjectBox", "STATIC")
{
    Pos(0, 520);
    Size(105, 55);
    ColorGroup("BACKGROUND");
    CreateControl("FindTitle", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(5, 5);
        Size(80, 10);
        Font("SMALL");
        JustifyText("LEFT");
        Text("Find Objects");
        Style("Transparent");
    }
    CreateControl("FindEdit", "EDIT")
    {
        ColorGroup("INPUTBOX2");
        Pos(5, 17);
        Size(95, 15);
        Font("SMALL");
        Style("ROLLOVER");
        Cursor("Highlight");
        UseVar("editor.object.find.text");
    }
    CreateControl("FindBtn", "BUTTON")
    {
        Pos(5, 35);
        Size(50, 15);
        Font("SMALL");
        Text("Find Next");
        Cursor("Highlight");
        Style("ROLLOVER");
        NotifyParent("Button::Press", "Find");
    }
    OnEvent("Find")
    {
        Cmd("editor.object.find.next");
    }
}
// End Object Find Control


// End Object Edit Control


// Start Object Edit Control
CreateControl("EditObject", "STATIC")
{
    Pos(0, 80);
    Size(115, 606);
    ColorGroup("INPUTBOX");
    CreateControl("EditObjectTitle", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(0, 0);
        Size(115, 12);
        Font("SMALL");
        JustifyText("VCENTER");
        Text("EDIT OBJECT:");
        Style("Transparent");
    }
    CreateControl("CursorControl", "STATIC")
    {
        Style("Transparent");
        ColorGroup("INPUTBOX");
        Pos(0, 12);
        Size(110, 50);
        CreateControl("CursorTitle", "STATIC")
        {
            ColorGroup("BACKGROUND");
            Pos(4, 0);
            Size(30, 12);
            Font("SMALL");
            JustifyText("LEFT");
            Text("Action:");
            Style("Transparent");
        }
        CreateControl("Select", "BUTTON")
        {
            Pos(5, 12);
            Size(50, 15);
            Font("SMALL");
            Text("Select");
            Cursor("Highlight");
            Style("ROLLOVER", "RADIO");
            NotifyParent("Button::Select", "ObjectCopyctrl0");
            UseVar("editor.object.mode.place");
            Value(0);
            TipText("Select an object that has been placed in the world");
        }
        CreateControl("Place", "BUTTON")
        {
            Pos(58, 12);
            Size(50, 15);
            Font("SMALL");
            Text("Place");
            Cursor("Highlight");
            Style("ROLLOVER", "RADIO");
            NotifyParent("Button::Select", "ObjectCopyctrl0");
            UseVar("editor.object.mode.place");
            Value(1);
            TipText("Place an object in the world");
        }
        CreateControl("Multi", "BUTTON")
        {
            Pos(5, 30);
            Size(103, 15);
            Font("SMALL");
            Text("Multi Select");
            Cursor("Highlight");
            Style("ROLLOVER", "RADIO");
            NotifyParent("Button::Select", "ObjectCopyctrl1");
            UseVar("editor.object.mode.place");
            Value(2);
            TipText("Use this to select multiple objects at once", "SHIFT+LMB will allow you to bandbox a group of objects");
        }
        OnEvent("ObjectCopyctrl0")
        {
           Cmd("iface.deactivate Editobject.objectcopyctrl");
           Cmd("iface.activate EditObject.ObjectPropertiesTitle");
        }
        OnEvent("ObjectCopyctrl1")
        {
           Cmd("iface.activate EditObject.objectcopyctrl");
           Cmd("iface.deactivate EditObject.ObjectPropertiesTitle");
        }
        OnEvent("Control::Activate")
        {
       	   Deactivate("Editobject.objectcopyctrl");
	   Cmd("editor.animation.exitmode");
        }
    }

    CreateControl("SnapTo", "STATIC")
    {
        Pos(0, 70);
        Size(110, 90);
        Style("Transparent");
        ColorGroup("BACKGROUND");
        CreateControl("SnapToTitle", "STATIC")
        {
            ColorGroup("BACKGROUND");
            Pos(0, 0);
            Size(110, 12);
            Font("SMALL");
            JustifyText("LEFT");
            Text("Snap To:");
            Style("Transparent");
            TipText("Movement and Rotation will snap to", "a defined value for more precise movement");
        }
        CreateControl("SnapToGrid", "BUTTON")
        {
            Pos(10, 14);
            Size(40, 15);
            Font("SMALL");
            Text("Grid");
            Cursor("Highlight");
            Style("ROLLOVER", "TOGGLE");
            UseVar("editor.object.mode.snap.value");
            TipText("Toggle objects movement in a predefined value");
        }
        CreateControl("gridUnits", "EDIT")
        {
            ColorGroup("INPUTBOX2");
            Pos(12, 32);
            Size(36, 16);
            Font("SMALL");
            Style("ROLLOVER");
            Cursor("Highlight");
            UseVar("editor.object.gridresolution");
            MaxLength(6);
        }
        CreateControl("gridUnitsSlider", "SLIDER")
        {
            ColorGroup("INPUTBOX2");
            Pos(6, 50);
            Size(45, 15);
            Font("SMALL");
            Style("ROLLOVER");
            Cursor("Highlight");
            UseVar("editor.object.gridresolution");
            SliderPageSize(75.0);
        }
        CreateControl("RotateSnap", "BUTTON")
        {
            Pos(55, 14);
            Size(50, 15);
            Font("SMALL");
            Text("Rotate");
            Cursor("Highlight");
            Style("ROLLOVER", "TOGGLE");
            UseVar("editor.object.mode.rotatesnap.value");
            TipText("Toggle objects rotation in a predetermined value");
        }
        CreateControl("rotateUnits", "EDIT")
        {
            ColorGroup("INPUTBOX2");
            Pos(55, 32);
            Size(50, 16);
            Font("SMALL");
            Style("ROLLOVER");
            Cursor("Highlight");
            UseVar("editor.object.rotateresolution");
            MaxLength(6);
        }
        CreateControl("rotateUnitsSlider", "SLIDER")
        {
            ColorGroup("INPUTBOX2");
            Pos(57, 50);
            Size(45, 15);
            Font("SMALL");
            Style("ROLLOVER");
            Cursor("Highlight");
            UseVar("editor.object.rotateresolution");
            SliderPageSize(70.0);
        }
        CreateControl("rotReset", "BUTTON")
        {
            Pos(4, 70);
            Size(105, 15);
            Font("SMALL");
            Text("Reset Rotation");
            Cursor("Highlight");
            Style("ROLLOVER");
            NotifyParent("Button::Press", "rotReset");
            TipText("Reset the selected objects ");
        }
         OnEvent("rotReset")
        {
            Cmd("editor.object.rotreset");
        }
    }
    // End SnapTo Control

    //Start Ground Control
    CreateControl("GroundTo", "STATIC")
    {
    Pos(2, 165);
    Size(110, 105);
    Style("Transparent");
    ColorGroup("BACKGROUND");
    CreateControl("GroundObjectTitle", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(0, 0);
        Size(110, 12);
        Font("SMALL");
        Text("Alignment");
        JustifyText("VCENTER");
        Cursor("Highlight");
        Style("Transparent");
        TipText("Uses the intended object Origin or" ,"the origin of the bounding Box for rotation, movement and snapping");
    }
    CreateControl("UseGroundTitle", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(0, 12);
        Size(35, 12);
        Font("SMALL");
        Text("Use:");
        Cursor("Highlight");
        JustifyText("LEFT");
        Style("Transparent");
    }
    CreateControl("UseOrigin", "BUTTON")
    {
        Pos(2,26);
        Size(50, 15);
        Font("SMALL");
        Text("Origin");
        Cursor("Highlight");
        Style("ROLLOVER", "RADIO");
        UseVar("editor.object.useorigin.value");
	Value(1);
	TipText("Use the true origin of the object","for rotation, movement and snapping");
    }
    CreateControl("UseBox", "BUTTON")
    {
        Pos(56,26);
        Size(50, 15);
        Font("SMALL");
        Text("Box");
        Cursor("Highlight");
        Style("ROLLOVER", "RADIO");
        UseVar("editor.object.useorigin.value");
	Value(0);
	TipText("Use the bounding box (collision)","of the object for rotation, movement and snapping");
    }
    CreateControl("GroundToTTitle", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(3, 46);
        Size(80, 12);
        Font("SMALL");
        Text("Ground To:");
        Cursor("Highlight");
        JustifyText("LEFT");
        Style("Transparent");
        TipText("The selected object will be snapped","down or up to a selected object or to the terrain");
    }
    CreateControl("GroundToTerrain", "BUTTON")
    {
        Pos(2, 60);
        Size(53, 15);
        Font("SMALL");
        Text("Terrain");
        Cursor("Highlight");
        Style("ROLLOVER", "RADIO");
        UseVar("editor.object.groundmode");
        Value(0);
        TipText("Snaps to the terrain height directly above or below the selected object");
    }
    CreateControl("GroundToObjects", "BUTTON")
    {
        Pos(58, 60);
        Size(50, 15);
        Font("SMALL");
        Text("Object");
        Cursor("Highlight");
        Style("ROLLOVER", "RADIO");
        UseVar("editor.object.groundmode");
        Value(1);
        TipText("Snaps to the object height directly above or below the selected object");
    }
    CreateControl("Ground", "BUTTON")
    {
        Pos(2,82);
        Size(105, 16);
        Font("SMALL");
        Text("Ground Object");
        Cursor("Highlight");
        Style("ROLLOVER");
        NotifyParent("Button::Press", "Ground");
        TipText("Snaps the selected object to the Object or Terrain");
    }
    OnEvent("Ground")
    {
        Cmd("editor.object.ground");
    }
    OnEvent("GroundRoot")
    {
        Cmd("editor.object.groundroot");
    }
    }
    // End Object Ground Control

    // Start Object Visibility Control
    CreateControl("ObjectVisibility", "STATIC")
    {
        Pos(2, 272);
        Size(110, 34);
        Style("Transparent");
        ColorGroup("BACKGROUND");
        CreateControl("VisibilityTitle", "STATIC")
        {
            ColorGroup("BACKGROUND");
            Pos(3, 0);
            Size(80, 12);
            Font("SMALL");
            Text("Selectability:");
            Cursor("Highlight");
            JustifyText("LEFT");
            Style("Transparent");
            TipText("Toggles selectability and visibility of individual objects");
        }
        CreateControl("Selectable", "BUTTON")
        {
            Pos(2, 12);
            Size(55, 16);
            Font("SMALL");
            Text("Active");
            Cursor("Highlight");
            Style("ROLLOVER", "TOGGLE");
            UseVar("editor.object.selectable");
            TipText("The selected object is selectable","WHOA!* Name the object before toggling the selectability off");
        }
        CreateControl("Hide", "BUTTON")
        {
            Pos(60, 12);
            Size(50, 16);
            Font("SMALL");
            Text("Hide");
            Cursor("Highlight");
            Style("ROLLOVER", "TOGGLE");
            UseVar("editor.object.hide");
            TipText("The selected object is visible","WHOA!* Name the object before toggling the visibility off");
        }
    }
    // End Object Visibility Control

    // Start Object Properties Control
    CreateControl("ObjectPropertiesTitle", "STATIC")
    {
        Style("Transparent");
        ColorGroup("BACKGROUND");
        Pos(0, 310);
        Size(115, 291);
        CreateControl("ObjPropTitle", "STATIC")
        {
            ColorGroup("BACKGROUND");
            Pos(2, 0);
            Size(100, 12);
            Font("SMALL");
            JustifyText("LEFT");
            Text("Properties:");
            Style("Transparent");
        }
        CreateControl("HeightTitle", "STATIC")
        {
            ColorGroup("BACKGROUND");
            Pos(4, 12);
            Size(40, 12);
            Font("SMALL");
            JustifyText("LEFT");
            Text("Height:");
            Style("Transparent");
            TipText("Manually enter the height that the selected","object should be placed at");
        }
        CreateControl("Height", "EDIT")
        {
            ColorGroup("INPUTBOX2");
            Pos(5, 26);
            Size(60, 15);
            Font("SMALL");
            Style("ROLLOVER");
            Cursor("Highlight");
            UseVar("editor.object.height");
        }
        CreateControl("HeightLock", "BUTTON")
        {
            Pos(70, 26);
            Size(35, 15);
            Font("SMALL");
            Text("Lock");
            Cursor("Highlight");
            Style("ROLLOVER", "TOGGLE");
            UseVar("editor.object.lockheight");
            TipText("Locks the height for newly placed objects", "Set the height, click 'Lock', and all","new objects will be placed at that height");
        }
        CreateControl("ConfigTitle", "STATIC")
        {
            ColorGroup("BACKGROUND");
            Pos(5, 46);
            Size(80, 12);
            Font("SMALL");
            JustifyText("LEFT");
            Text("Odf File:");
            Style("Transparent");
            TipText("Name of the .ODF file that has been loaded");
        }
        CreateControl("Config", "EDIT")
        {
            ColorGroup("INPUTBOX2");
            Pos(2, 58);
            Size(110, 15);
            Font("SMALL");
            Style("ROLLOVER");
            Cursor("Highlight");
            UseVar("editor.object.config");
        }
        CreateControl("ConfigBrowse", "BUTTON")
        {
            Pos(45, 76);
            Size(65, 15);
            Font("SMALL");
            Text("Browse");
            Cursor("Highlight");
            Style("ROLLOVER");
            NotifyParent("Button::Press", "configbrowse");
            TipText("Opens a dialog box to load .ODF and .MSH files into the editor");
        }
        CreateControl("NameTitle", "STATIC")
        {
            ColorGroup("BACKGROUND");
            Pos(5, 94);
            Size(80, 12);
            Font("SMALL");
            JustifyText("LEFT");
            Text("Name");
            Style("Transparent");
            TipText("The name of the currently selected object");
        }
        CreateControl("Name", "EDIT")
        {
            ColorGroup("INPUTBOX2");
            Pos(2, 106);
            Size(110, 15);
            Font("SMALL");
            Style("ROLLOVER");
            Cursor("Highlight");
            UseVar("editor.object.name");
        }
        CreateControl("LabelTitle", "STATIC")
        {
            ColorGroup("BACKGROUND");
            Pos(5, 122);
            Size(80, 10);
            Font("SMALL");
            JustifyText("LEFT");
            Text("Label");
            Style("Transparent");
            TipText("This is used to label objects, but it NOT the same as giving them a name");
        }
        CreateControl("Label", "EDIT")
        {
            ColorGroup("INPUTBOX2");
            Pos(2, 134);
            Size(110, 15);
            Font("SMALL");
            Style("ROLLOVER");
            Cursor("Highlight");
            UseVar("editor.object.label");
        }
        CreateControl("TeamTitle", "STATIC")
        {
            ColorGroup("BACKGROUND");
            Pos(5, 150);
            Size(80, 10);
            Font("SMALL");
            JustifyText("LEFT");
            Text("Team");
            Style("Transparent");
            TipText("This number represents the team the selected");
        }
        CreateControl("Team", "EDIT")
        {
            ColorGroup("INPUTBOX2");
            Pos(5, 162);
            Size(40, 15);
            Font("SMALL");
            Style("ROLLOVER");
            Cursor("Highlight");
            UseVar("editor.object.team");
        }
        CreateControl("Browser", "BUTTON")
        {
            Pos(2, 182);
            Size(110, 15);
            Font("SMALL");
            Text("Toggle Browser");
            Cursor("Highlight");
            Style("ROLLOVER");
            NotifyParent("Button::Press", "ToggleBrowser");
            TipText("Toggle the Object List Browser", "Wow, can you believe we wrote a tooltip for that?");
        }
        OnEvent("ToggleBrowser")
        {
            Cmd("editor.object.togglebrowser");
        }
        OnEvent("configbrowse")
        {
            Cmd("editor.object.browseconfig");
        }

        CreateControl("Animation", "BUTTON")
        {
            Pos(2, 202);
            Size(110, 15);
            Font("SMALL");
            Text("Anim Mode");
            Cursor("Highlight");
            Style("ROLLOVER");
            NotifyParent("Button::Press", "AnimEdit");
            TipText("Activate Animation Mode");
        }
        OnEvent("AnimEdit")
        {
            Cmd("editor.animation.togglemode");
        }

        CreateControl("MagicButtonTitle", "STATIC")
        {
            ColorGroup("BACKGROUND");
            Pos(5, 230);
            Size(100, 10);
            Font("SMALL");
            JustifyText("LEFT");
            Text("Break Up Obj");
            Style("Transparent");
        }
        CreateControl("MagicButton", "BUTTON")
        {
            Pos(2, 241);
            Size(110, 15);
            Font("SMALL");
            Text("Magic!!!");
            Cursor("Highlight");
            Style("ROLLOVER");
            NotifyParent("Button::Press", "BreakUp");
            TipText("I hope you believe in magic, elsewise this won't work");
        }
        OnEvent("BreakUp")
        {
            Cmd("editor.object.break_up_object");
        }

        CreateControl("ObjToCameraTitle", "STATIC")
        {
            ColorGroup("BACKGROUND");
            Pos(5, 260);
            Size(100, 10);
            Font("SMALL");
            JustifyText("LEFT");
            Text("For C.Chico");
            Style("Transparent");
        }
        CreateControl("ObjToCamera", "BUTTON")
        {
            Pos(2, 271);
            Size(110, 15);
            Font("SMALL");
            Text("Obj To Camera");
            Cursor("Highlight");
            Style("ROLLOVER");
            NotifyParent("Button::Press", "ToCamera");
            TipText("Are you C. Chico?  I didn't think so.");
        }
        OnEvent("ToCamera")
        {
            Cmd("editor.gregj.object_to_camera");
        }

 
    }
    // End Object Properties Control
// Start Multi-object Copy Paste and Save Controls
    // the next six buttons only get displayed if multiselect mode is active
    CreateControl("ObjectCopyctrl", "STATIC")
    {
        Pos(0, 310);
        Size(115, 205);
        ColorGroup("INPUTBOX");
        Style("TRANSPARENT");
        CreateControl("CopyPasteTitle", "STATIC")
        {
            ColorGroup("INPUTBOX");
            Pos(3, 0);
            Size(115, 12);
            Font("SMALL");
            Text("Group:");
            Cursor("Highlight");
            JustifyText("LEFT");
            Style("TRANSPARENT");
        }
        CreateControl("CopyObjs", "BUTTON")
        {
            Pos(10, 12);
            Size(45, 15);
            Font("SMALL");
            Text("Copy");
            Cursor("Highlight");
            Style("ROLLOVER");
            NotifyParent("Button::Press", "copyObjects");
        }
        CreateControl("PasteObjs", "BUTTON")
        {
            Pos(60, 12);
            Size(45, 15);
            Font("SMALL");
            Text("Paste");
            Cursor("Highlight");
            Style("ROLLOVER", "RADIO");
            UseVar("editor.object.mode.place");
            Value(3);
        }
        CreateControl("SaveObjs", "BUTTON")
        {
            Pos(15, 30);
            Size(85, 15);
            Font("SMALL");
            Text("Save Group");
            Cursor("Highlight");
            Style("ROLLOVER");
            NotifyParent("Button::Press", "saveObjects");
        }
        CreateControl("LoadObjs", "BUTTON")
        {
            Pos(15, 50);
            Size(85, 15);
            Font("SMALL");
            Text("Load Group");
            Cursor("Highlight");
            Style("ROLLOVER");
            NotifyParent("Button::Press", "loadObjects");
        }
        CreateControl("SetCommon", "BUTTON")
        {
            Pos(15, 70);
            Size(80, 15);
            Font("SMALL");
            Text("Common");
            Cursor("Highlight");
            Style("ROLLOVER", "RADIO");
            UseVar("editor.object.mode.place");
            Value(4);
        }
        CreateControl("EnableCommon", "BUTTON")
        {
            Pos(5, 88);
            Size(105, 15);
            Font("SMALL");
            Text("Enable Common");
            Cursor("Highlight");
            Style("ROLLOVER", "TOGGLE");
            UseVar("editor.object.enablecommon");
        }
        OnEvent("copyObjects")
        {
            Cmd("editor.object.copyobjs");
        }
        OnEvent("saveObjects")
        {
            Cmd("editor.object.saveobjectgroup");
        }
        OnEvent("loadObjects")
        {
            Cmd("editor.object.loadobjectgroup");
        }

        CreateControl("SnapTogether", "BUTTON")
        {
            Pos(5, 113);
            Size(105, 15);
            Font("SMALL");
            Text("Snap Together");
            Cursor("Highlight");
            Style("ROLLOVER");
            NotifyParent("Button::Press", "snapTogether");
        }
        OnEvent("snapTogether")
        {
            Cmd("editor.object.snap_together_multiselect");
        }

        CreateControl("LoadGroup1", "BUTTON")
        {
            Pos(5, 133);
            Size(105, 10);
            Font("SMALL");
            Text("Load Files");
            Cursor("Highlight");
            Style("ROLLOVER");
            NotifyParent("Button::Press", "loadAsGroup");
        }
        CreateControl("LoadGroup2", "BUTTON")
        {
            Pos(5, 143);
            Size(105, 10);
            Font("SMALL");
            Text("As Group");
            Cursor("Highlight");
            Style("ROLLOVER");
            NotifyParent("Button::Press", "loadAsGroup");
        }

        OnEvent("loadAsGroup")
        {
            Cmd("editor.object.load_as_group");
        }

        CreateControl("SaveAsOBJ", "BUTTON")
        {
            Pos(5, 163);
            Size(105, 15);
            Font("SMALL");
            Text("Save As OBJ");
            Cursor("Highlight");
            Style("ROLLOVER");
            NotifyParent("Button::Press", "saveOBJ");
        }

        OnEvent("saveOBJ")
        {
            Cmd("editor.object.save_selected_as_obj");
        }


    }
    // End Multi-object Copy Paste and Save Controls
}


// Start Object Message Control
CreateControl("ObjectMessage", "STATIC")
{
    Pos(200, 200);
    Size(240, 80);
    ColorGroup("BACKGROUND");
    STYLE("MODAL");
    CreateControl("Text0", "EDIT")
    {
        Pos(5, 20);
        Size(230, 15);
        Font("SMALL");
        Style("ROLLOVER");
        Cursor("Highlight");
        UseVar("editor.object.msgTxt0");
    }
    CreateControl("Text1", "EDIT")
    {
        Pos(5, 40);
        Size(230, 15);
        Font("SMALL");
        Style("ROLLOVER");
        Cursor("Highlight");
        UseVar("editor.object.msgTxt1");
    }
    CreateControl("CANCEL", "BUTTON")
    {
        Pos(65, 60);
        Size(50, 15);
        Font("SMALL");
        Text("Cancel");
        Style("ROLLOVER");
        Cursor("Highlight");
        NotifyParent("Button::Press", "Cancel");
    }
    CreateControl("OK", "BUTTON")
    {
        Pos(125, 60);
        Size(50, 15);
        Font("SMALL");
        Text("OK");
        Style("ROLLOVER");
        Cursor("Highlight");
        NotifyParent("Button::Press", "OK");
    }
    OnEvent("Cancel")
    {
        Deactivate("|ObjectMessage");
    }
    OnEvent("OK")
    {
        Cmd("editor.object.setmatrix");
        Deactivate("|ObjectMessage");
    }
}
// End Object Message Control

// Start Object Instance Control
CreateControl("ObjectProps", "STATIC")
{
    Geometry("RIGHT", "TOP");
    Pos(0, 80);
    Size(150, 400);
    ColorGroup("INPUTBOX");
    CreateControl("ObjectPropsTitle", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(2, 2);
        Size(150, 12);
        Font("SMALL");
        JustifyText("VCENTER");
        Text("Object Instance");
        Style("TRANSPARENT");
    }
    // now the fields -- enabled/assigned dynamically --DY
    CreateControl("Prop0Title", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(5, 18);
        Size(140, 10);
        Font("SMALL");
        JustifyText("LEFT");
        Text("Prop0");
        Style("Transparent");
    }
    CreateControl("PropValue0", "EDIT")
    {
        ColorGroup("INPUTBOX2");
        Pos(5, 30);
        Size(140, 15);
        Font("SMALL");
        Style("ROLLOVER");
        Cursor("Highlight");
        UseVar("editor.object.props.value0");
    }
    //CreateControl("PropSetBtn0", "BUTTON")
    //{
    //    Pos(120, 30);
    //    Size(25, 15);
    //    Font("SMALL");
    //    Text("Set");
    //    Style("ROLLOVER", "RADIO");
    //    UseVar("editor.object.props.setbtn");
    //    Value(0);
    //}
    CreateControl("Prop1Title", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(5, 48);
        Size(95, 10);
        Font("SMALL");
        JustifyText("LEFT");
        Text("Prop1");
        Style("Transparent");
    }
    CreateControl("PropValue1", "EDIT")
    {
        ColorGroup("INPUTBOX2");
        Pos(5, 60);
        Size(140, 15);
        Font("SMALL");
        Style("ROLLOVER");
        Cursor("Highlight");
        UseVar("editor.object.props.value1");
    }
    //CreateControl("PropSetBtn1", "BUTTON")
    //{
    //    Pos(120, 60);
    //    Size(25, 15);
    //    Font("SMALL");
    //    Text("Set");
    //    Style("ROLLOVER", "RADIO");
    //    UseVar("editor.object.props.setbtn");
    //    Value(1);
    //}
    CreateControl("Prop2Title", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(5, 78);
        Size(95, 12);
        Font("SMALL");
        JustifyText("LEFT");
        Text("Prop2");
        Style("Transparent");
    }
    CreateControl("PropValue2", "EDIT")
    {
        ColorGroup("INPUTBOX2");
        Pos(5, 90);
        Size(140, 15);
        Font("SMALL");
        Style("ROLLOVER");
        Cursor("Highlight");
        UseVar("editor.object.props.value2");
    }
    //CreateControl("PropSetBtn2", "BUTTON")
    //{
    //    Pos(120, 90);
    //    Size(25, 15);
    //    Font("SMALL");
    //    Text("Set");
    //    Style("ROLLOVER", "RADIO");
    //    UseVar("editor.object.props.setbtn");
    //    Value(2);
    //}
    CreateControl("Prop3Title", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(5, 108);
        Size(95, 12);
        Font("SMALL");
        JustifyText("LEFT");
        Text("Prop3");
        Style("Transparent");
    }
    CreateControl("PropValue3", "EDIT")
    {
        ColorGroup("INPUTBOX2");
        Pos(5, 120);
        Size(140, 15);
        Font("SMALL");
        Style("ROLLOVER");
        Cursor("Highlight");
        UseVar("editor.object.props.value3");
    }
    //CreateControl("PropSetBtn3", "BUTTON")
    //{
    //    Pos(120, 120);
    //    Size(25, 15);
    //    Font("SMALL");
    //    Text("Set");
    //    Style("ROLLOVER", "RADIO");
    //    UseVar("editor.object.props.setbtn");
    //    Value(3);
    //}
    CreateControl("Prop4Title", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(5, 138);
        Size(95, 10);
        Font("SMALL");
        JustifyText("LEFT");
        Text("Prop4");
        Style("Transparent");
    }
    CreateControl("PropValue4", "EDIT")
    {
        ColorGroup("INPUTBOX2");
        Pos(5, 150);
        Size(140, 15);
        Font("SMALL");
        Style("ROLLOVER");
        Cursor("Highlight");
        UseVar("editor.object.props.value4");
    }
    //CreateControl("PropSetBtn4", "BUTTON")
    //{
    //    Pos(120, 150);
    //    Size(25, 15);
    //    Font("SMALL");
    //    Text("Set");
    //    Style("ROLLOVER", "RADIO");
    //    UseVar("editor.object.props.setbtn");
    //    Value(4);
    //}
    CreateControl("Prop5Title", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(5, 168);
        Size(95, 10);
        Font("SMALL");
        JustifyText("LEFT");
        Text("Prop5");
        Style("Transparent");
    }
    CreateControl("PropValue5", "EDIT")
    {
        ColorGroup("INPUTBOX2");
        Pos(5, 180);
        Size(140, 15);
        Font("SMALL");
        Style("ROLLOVER");
        Cursor("Highlight");
        UseVar("editor.object.props.value5");
    }
    //CreateControl("PropSetBtn5", "BUTTON")
    //{
    //    Pos(120, 180);
    //    Size(25, 15);
    //    Font("SMALL");
    //    Text("Set");
    //    Style("ROLLOVER", "RADIO");
    //    UseVar("editor.object.props.setbtn");
    //    Value(5);
    //}
    CreateControl("Prop6Title", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(5, 198);
        Size(95, 10);
        Font("SMALL");
        JustifyText("LEFT");
        Text("Prop6");
        Style("Transparent");
    }
    CreateControl("PropValue6", "EDIT")
    {
        ColorGroup("INPUTBOX2");
        Pos(5, 210);
        Size(140, 15);
        Font("SMALL");
        Style("ROLLOVER");
        Cursor("Highlight");
        UseVar("editor.object.props.value6");
    }
    //CreateControl("PropSetBtn6", "BUTTON")
    //{
    //    Pos(120, 210);
    //    Size(25, 15);
    //    Font("SMALL");
    //    Text("Set");
    //    Style("ROLLOVER", "RADIO");
    //    UseVar("editor.object.props.setbtn");
    //    Value(6);
    //}
    CreateControl("Prop7Title", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(5, 228);
        Size(95, 10);
        Font("SMALL");
        JustifyText("LEFT");
        Text("Prop7");
        Style("Transparent");
    }
    CreateControl("PropValue7", "EDIT")
    {
        ColorGroup("INPUTBOX2");
        Pos(5, 240);
        Size(140, 15);
        Font("SMALL");
        Style("ROLLOVER");
        Cursor("Highlight");
        UseVar("editor.object.props.value7");
    }
    //CreateControl("PropSetBtn7", "BUTTON")
    //{
    //    Pos(120, 240);
    //    Size(25, 15);
    //    Font("SMALL");
    //    Text("Set");
    //    Style("ROLLOVER", "RADIO");
    //    UseVar("editor.object.props.setbtn");
    //    Value(7);
    //}
    CreateControl("Prop8Title", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(5, 258);
        Size(95, 10);
        Font("SMALL");
        JustifyText("LEFT");
        Text("Prop8");
        Style("Transparent");
    }
    CreateControl("PropValue8", "EDIT")
    {
        ColorGroup("INPUTBOX2");
        Pos(5, 270);
        Size(140, 15);
        Font("SMALL");
        Style("ROLLOVER");
        Cursor("Highlight");
        UseVar("editor.object.props.value8");
    }
    //CreateControl("PropSetBtn8", "BUTTON")
    //{
    //    Pos(120, 270);
    //    Size(25, 15);
    //    Font("SMALL");
    //    Text("Set");
    //    Style("ROLLOVER", "RADIO");
    //    UseVar("editor.object.props.setbtn");
    //    Value(8);
    //}
    CreateControl("Prop9Title", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(5, 288);
        Size(95, 10);
        Font("SMALL");
        JustifyText("LEFT");
        Text("Prop9");
        Style("Transparent");
    }
    CreateControl("PropValue9", "EDIT")
    {
        ColorGroup("INPUTBOX2");
        Pos(5, 300);
        Size(140, 15);
        Font("SMALL");
        Style("ROLLOVER");
        Cursor("Highlight");
        UseVar("editor.object.props.value9");

    }
    //CreateControl("PropSetBtn9", "BUTTON")
    //{
    //    Pos(120, 300);
    //    Size(25, 15);
    //    Font("SMALL");
    //    Text("Set");
    //    Style("ROLLOVER", "RADIO");
    //    UseVar("editor.object.props.setbtn");
    //    Value(9);
    //}
    // the following are copy-from-to buttons that should remain at the "bottom"
    CreateControl("PropCopyFrom", "BUTTON")
    {
        Pos(30, 330);
        Size(95, 15);
        Font("SMALL");
        Text("Copy From");
        Cursor("Highlight");
        Style("ROLLOVER");
        NotifyParent("Button::Press", "PropCopyFrom");
    }
    CreateControl("PropCopyTo", "BUTTON")
    {
        Pos(30, 350);
        Size(95, 15);
        Font("SMALL");
        Text("Copy To");
        Cursor("Highlight");
        Style("ROLLOVER");
        NotifyParent("Button::Press", "PropCopyTo");
    }
    CreateControl("PageDown", "BUTTON")
    {
        Pos(8, 380);
        Size(65, 15);
        Font("SMALL");
        Text("Page Dn");
        Cursor("Highlight");
        Style("ROLLOVER");
        NotifyParent("Button::Press", "PageDown");
        TipText("Move one 'page' down");
    }
    CreateControl("PageUp", "BUTTON")
    {
        Pos(78, 380);
        Size(65, 15);
        Font("SMALL");
        Text("Page Up");
        Cursor("Highlight");
        Style("ROLLOVER");
        NotifyParent("Button::Press", "PageUp");
        TipText("Move one 'page' up");
    }
    OnEvent("PropCopyFrom")
    {
        Cmd("editor.object.props.copyfrom");
    }
    OnEvent("PropCopyTo")
    {
        Cmd("editor.object.props.copyto");
    }
    OnEvent("PageDown")
    {
        Cmd("editor.object.props.pagedown");
    }
    OnEvent("PageUp")
    {
        Cmd("editor.object.props.pageup");
    }
}
// End Object Instance Control