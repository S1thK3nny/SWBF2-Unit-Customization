// Start Hint Node Mode Box Control
CreateControl("HintModeBox", "STATIC")
{
    Pos(115, 322);
    Size(90, 80);
    ColorGroup("INPUTBOX");
    STYLE("MODAL");
    CreateControl("ModeTitle", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(5, 0);
        Size(75, 10);
        Font("SMALL");
        JustifyText("LEFT");
        Text("Mode:");
        Style("TRANSPARENT");
    }
    CreateControl("Mode1", "BUTTON")
    {
        ColorGroup("LISTBOX");
        Pos(5, 12);
        Size(75, 12);
        Font("SMALL");
        Style("ROLLOVER", "RADIO");
        Text("None");
        Cursor("Highlight");
        UseVar("editor.hintnode.mode");
        Value(0);
    }
    CreateControl("Mode2", "BUTTON")
    {
        ColorGroup("LISTBOX");
        Pos(5,24);
        Size(75, 12);
        Font("SMALL");
        Style("ROLLOVER", "RADIO");
        Text("Attack");
        Cursor("Highlight");
        UseVar("editor.hintnode.mode");
        Value(1);
    }
    CreateControl("Mode3", "BUTTON")
    {
        ColorGroup("LISTBOX");
        Pos(5, 36);
        Size(75, 12);
        Font("SMALL");
        Style("ROLLOVER", "RADIO");
        Text("Defend");
        Cursor("Highlight");
        UseVar("editor.hintnode.mode");
        Value(2);
    }
    CreateControl("Mode4", "BUTTON")
    {
        ColorGroup("LISTBOX");
        Pos(5, 48);
        Size(75, 12);
        Font("SMALL");
        Style("ROLLOVER", "RADIO");
        Text("Both");
        Cursor("Highlight");
        UseVar("editor.hintnode.mode");
        Value(3);
    }
    CreateControl("OK", "BUTTON")
    {
        Pos(22, 64);
        Size(40, 14);
        Font("SMALL");
        Text("OK");
        Style("ROLLOVER");
        Cursor("Highlight");
        NotifyParent("Button::Press", "OK");
    }
    OnEvent("OK")
    {
        Deactivate("|HintModeBox");
    }
}
// End Hint Node Mode Box Control

// Start Stance Control
CreateControl("StanceBox", "STATIC")
{
    Pos(115, 290);
    Size(90, 100);
    ColorGroup("INPUTBOX");
    STYLE("MODAL");
    CreateControl("StanceTitle", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(4, 0);
        Size(75, 10);
        Font("SMALL");
        JustifyText("LEFT");
        Text("Stance:");
        Style("TRANSPARENT");
    }
    CreateControl("Stance1", "BUTTON")
    {
        ColorGroup("LISTBOX");
        Pos(5, 12);
        Size(75, 12);
        Font("SMALL");
        Style("ROLLOVER", "TOGGLE");
        Text("Stand");
        Cursor("Highlight");
        UseVar("editor.hintnode.stance0");
    }
    CreateControl("Stance2", "BUTTON")
    {
        ColorGroup("LISTBOX");
        Pos(5,24);
        Size(75, 12);
        Font("SMALL");
        Style("ROLLOVER", "TOGGLE");
        Text("Crouch");
        Cursor("Highlight");
        UseVar("editor.hintnode.stance1");
    }
    CreateControl("Stance3", "BUTTON")
    {
        ColorGroup("LISTBOX");
        Pos(5, 36);
        Size(75, 12);
        Font("SMALL");
        Style("ROLLOVER", "TOGGLE");
        Text("Prone");
        Cursor("Highlight");
        UseVar("editor.hintnode.stance2");
    }
    CreateControl("Stance4", "BUTTON")
    {
        ColorGroup("LISTBOX");
        Pos(5, 48);
        Size(75, 12);
        Font("SMALL");
        Style("ROLLOVER", "TOGGLE");
        Text("Left");
        Cursor("Highlight");
        UseVar("editor.hintnode.stance3");
    }
    CreateControl("Stance5", "BUTTON")
    {
        ColorGroup("LISTBOX");
        Pos(5, 60);
        Size(75, 12);
        Font("SMALL");
        Style("ROLLOVER", "TOGGLE");
        Text("Right");
        Cursor("Highlight");
        UseVar("editor.hintnode.stance4");
    }
    CreateControl("OK", "BUTTON")
    {
        Pos(20, 76);
        Size(40, 14);
        Font("SMALL");
        Text("OK");
        Style("ROLLOVER");
        Cursor("Highlight");
        NotifyParent("Button::Press", "OK");
    }
    OnEvent("OK")
    {
        Deactivate("|StanceBox");
    }
}
// End Stance Mode Control

//Note to self, i probably should have concatenated the three different popup boxes into one general one
// but i failed to realize i didn't need three til after i had them =)
//
// CREATE THE HINT TYPE EDITOR CONTROL
//
CreateControl("HintTypeList", "STATIC")
{
    Pos(116, 220);
    Size(95, 105);
    ColorGroup("INPUTBOX");
    STYLE("MODAL");
    CreateControl("HintTypeListSlider", "LISTSLIDER")
    {
        Orientation("VERTICAL");
        Position(75, 0);
        Size(10, 82);
        Style("BUTTONS", "ROLLOVER");
        Cursor("Highlight");
    }
    CreateControl("TypeList", "LISTBOX")
    {
        ColorGroup("LISTBOX");
        Pos(5, 0);
        Size(70, 82);
        CellSize(85, 12);
        SliderPadding(1);
        Font("SMALL");
        Style("CHILDROLLOVER");
        UseVar("editor.hintnode.type");
        UseSlider("<HintTypeListSlider");
    }
    CreateControl("OK", "BUTTON")
    {
        Pos(22, 85);
        Size(40, 14);
        Font("SMALL");
        Text("OK");
        Style("ROLLOVER");
        Cursor("Highlight");
        NotifyParent("Button::Press", "OK");
    }
    OnEvent("OK")
    {
        Deactivate("|HintTypeList");
    }
}

//
// CREATE THE HINT ZONE EDITOR CONTROL
//
CreateControl("HintZoneList", "STATIC")
{
    Pos(115, 246);
    Size(125, 150);
    ColorGroup("INPUTBOX");
    STYLE("MODAL");
    CreateControl("HintZoneListSlider", "LISTSLIDER")
    {
        Orientation("VERTICAL");
        Position(113, 2);
        Size(10, 125);
        Style("BUTTONS", "ROLLOVER");
        Cursor("Highlight");
    }
    CreateControl("ZoneList", "LISTBOX")
    {
        ColorGroup("LISTBOX");
        Pos(2, 2);
        Size(112, 125);
        CellSize(112, 12);
        SliderPadding(1);
        Font("SMALL");
        Style("CHILDROLLOVER");
        UseVar("editor.hintnode.zone");
        UseSlider("<HintZoneListSlider");
    }
    CreateControl("OK", "BUTTON")
    {
        Pos(30, 130);
        Size(40, 15);
        Font("SMALL");
        Text("OK");
        Style("ROLLOVER");
        Cursor("Highlight");
        NotifyParent("Button::Press", "OK");
    }
    OnEvent("OK")
    {
        Deactivate("|HintZoneList");
    }
}

//
// CREATE THE HINT TARGET EDITOR CONTROL
//
CreateControl("HintTargetList", "STATIC")
{
    Pos(115, 250);
    Size(125, 150);
    ColorGroup("INPUTBOX");
    STYLE("MODAL");
    CreateControl("HintTargetListSlider", "LISTSLIDER")
    {
        Orientation("VERTICAL");
        Position(112, 0);
        Size(10, 125);
        Style("BUTTONS", "ROLLOVER");
        Cursor("Highlight");
    }
    CreateControl("TargetList", "LISTBOX")
    {
        ColorGroup("LISTBOX");
        Pos(0, 0);
        Size(112, 125);
        CellSize(112, 12);
        SliderPadding(1);
        Font("SMALL");
        Style("CHILDROLLOVER");
        UseVar("editor.hintnode.target");
        UseSlider("<HintTargetListSlider");
    }
    CreateControl("OK", "BUTTON")
    {
        Pos(30, 130);
        Size(40, 15);
        Font("SMALL");
        Text("OK");
        Style("ROLLOVER");
        Cursor("Highlight");
        NotifyParent("Button::Press", "OK");
    }
    OnEvent("OK")
    {
        Deactivate("|HintTargetList");
    }
}


//
// CREATE THE HINT Mode EDITOR CONTROL
//
CreateControl("HintModeList", "STATIC")
{
    Pos(115, 220);
    Size(95, 150);
    ColorGroup("INPUTBOX");
    STYLE("MODAL");
    CreateControl("HintModeListSlider", "LISTSLIDER")
    {
        Orientation("VERTICAL");
        Position(95, 0);
        Size(10, 125);
        Style("BUTTONS", "ROLLOVER");
        Cursor("Highlight");
    }
    CreateControl("ModeList", "LISTBOX")
    {
        ColorGroup("LISTBOX");
        Pos(0, 0);
        Size(95, 125);
        CellSize(85, 12);
        BorderSize(5);
        BevelSize(3);
        SliderPadding(1);
        Font("SMALL");
        Style("CHILDROLLOVER");
        UseVar("editor.hintnode.Mode");
        UseSlider("<HintModeListSlider");
    }
    CreateControl("OK", "BUTTON")
    {
        Pos(22, 130);
        Size(40, 15);
        Font("SMALL");
        Text("OK");
        Style("ROLLOVER");
        Cursor("Highlight");
        NotifyParent("Button::Press", "OK");
    }
    OnEvent("OK")
    {
        Deactivate("|HintModeList");
    }
}


//
// CREATE THE HINT ZONE EDITOR CONTROL
//
CreateControl("HintBuildingList", "STATIC")
{
    Pos(115, 190);
    Size(95, 150);
    ColorGroup("INPUTBOX");
    STYLE("MODAL");
    CreateControl("HintBuildingListSlider", "LISTSLIDER")
    {
        Orientation("VERTICAL");
        Position(95, 0);
        Size(10, 125);
        Style("BUTTONS", "ROLLOVER");
        Cursor("Highlight");
    }
    CreateControl("BuildingList", "LISTBOX")
    {
        ColorGroup("LISTBOX");
        Pos(0, 0);
        Size(112, 125);
        CellSize(112, 12);
        BorderSize(5);
        BevelSize(3);
        SliderPadding(1);
        Font("SMALL");
        Style("CHILDROLLOVER");
        UseVar("editor.hintnode.building");
        UseSlider("<HintBuildingListSlider");
    }
    CreateControl("OK", "BUTTON")
    {
        Pos(22, 130);
        Size(40, 15);
        Font("SMALL");
        Text("OK");
        Style("ROLLOVER");
        Cursor("Highlight");
        NotifyParent("Button::Press", "OK");
    }
    OnEvent("OK")
    {
        Deactivate("|HintBuildingList");
    }
}



// ======================
// SWBF AI hintnode EDITOR
// ======================

CreateControl("EditHintNode", "STATIC")
{
    Pos(0, 80);
    Size(115, 580);
    ColorGroup("INPUTBOX");
    CreateControl("EditHintTitle", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(0, 0);
        Size(115, 12);
        Font("SMALL");
        JustifyText("VCENTER");
        Text("HINT NODES");
        Style("TRANSPARENT");
    }
    CreateControl("NameTitle", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(5, 12);
        Size(80, 12);
        Font("SMALL");
        JustifyText("LEFT");
        Text("Name:");
        Style("TRANSPARENT");
        TipText("Name of a selected Hint Node");
    }
    CreateControl("Name", "EDIT")
    {
        ColorGroup("INPUTBOX2");
        Pos(5, 25);
        Size(95, 15);
        Font("SMALL");
        Style("ROLLOVER");
        Cursor("Highlight");
        UseVar("editor.hintnode.name");
    }
    CreateControl("ActionTitle", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(5, 42);
        Size(95, 10);
        Font("SMALL");
        JustifyText("LEFT");
        Text("Action:");
        Style("TRANSPARENT");
    }
    CreateControl("action1", "BUTTON")
    {
        ColorGroup("DEFAULT");
        Pos(5, 55);
        Size(95, 15);
        Font("SMALL");
        Style("ROLLOVER", "RADIO");
        Text("Move");
        Cursor("Highlight");
        UseVar("editor.hintnode.actionmode");
        Value(1);
        TipText("Move a selected Hint Node");
    }
    CreateControl("action2", "BUTTON")
    {
        ColorGroup("DEFAULT");
        Pos(5, 72);
        Size(95, 15);
        Font("SMALL");
        Style("ROLLOVER", "RADIO");
        Text("New Node");
        Cursor("Highlight");
        UseVar("editor.hintnode.actionmode");
        Value(2);
         TipText("Place a new Hint Node");
    }
    CreateControl("action4", "BUTTON")
    {
        ColorGroup("DEFAULT");
        Pos(5, 89);
        Size(95, 15);
        Font("SMALL");
        Style("ROLLOVER", "RADIO");
        Text("Tape Measure");
        Cursor("Highlight");
        UseVar("editor.hintnode.actionmode");
        Value(4);
          TipText("CLICK-HOLD-DRAG cursor to measure distance");
    }
    CreateControl("tapeDist", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(5, 108);
        Size(110, 10);
        Font("SMALL");
        JustifyText("LEFT");
        Text("Distance: ");
        Style("Transparent");
    }
    CreateControl("TypeTitle", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(2, 122);
        Size(80, 10);
        Font("SMALL");
        JustifyText("LEFT");
        Text("Type");
        Style("TRANSPARENT");
         TipText("Click the drop down box to select a Hint Node type");
    }
    CreateControl("Type", "BUTTON")
    {
        Pos(5, 136);
        Size(95, 15);
        Font("SMALL");
        Text("");
        Cursor("Highlight");
        Style("ROLLOVER");
        NotifyParent("Button::Press", "ShowTypes");
        TipText("SNIPE: Allows AI snipers to take up defensive or offensive snipe positions",
        "COVER/VEHICLE COVER: AI will use these to take cover while in battle.",
        "JET JUMP: Allows Jedi and Jetpack units to use their high jump abilities.",
        "MINE: AI units will place mines on this Node.",
        "FORTIFICATION: AI will take defensive positions in CTF and other base defense scenarios");
    }
    CreateControl("CommandPostTitle", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(2, 154);
        Size(110, 10);
        Font("SMALL");
        JustifyText("LEFT");
        Text("Target Name:");
        Style("TRANSPARENT");
        TipText("This is not used by the game, disregard this box.");
    }
    CreateControl("CommandPost", "BUTTON")
    {
        Pos(2, 166);
        Size(110, 15);
        Font("SMALL");
        Text("");
        Cursor("Highlight");
        Style("ROLLOVER");
        NotifyParent("Button::Press", "ShowZones");
    }
    CreateControl("BuildingTitle", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(2, 175);
        Size(80, 10);
        Font("SMALL");
        JustifyText("LEFT");
        Text("Building Name");
        Style("TRANSPARENT");
    }
    CreateControl("BuildingName", "BUTTON")
    {
        ColorGroup("INPUTBOX");
        Pos(2, 188);
        Size(95, 15);
        Font("SMALL");
        Text("");
        Cursor("Highlight");
        Style("ROLLOVER");
        NotifyParent("Button::Press", "ShowBuildings");
    }
    CreateControl("PrimaryStance", "BUTTON")
    {
        Pos(2, 210);
        Size(110, 15);
        Font("SMALL");
        Text("Primary Stance");
        Cursor("Highlight");
        Style("ROLLOVER");
        NotifyParent("Button::Press", "ShowPrimaryStances");
        TipText("Select the Primary Stance of the selected Hint Node(s)");
    }
    CreateControl("SecondaryStance", "BUTTON")
    {
        Pos(2, 228);
        Size(110, 15);
        Font("SMALL");
        Text("Second Stance");
        Cursor("Highlight");
        Style("ROLLOVER");
        NotifyParent("Button::Press", "ShowSecondaryStances");
        TipText("Select the Secondary Stance of the selected Hint Node(s)");
    }
    CreateControl("Mode", "BUTTON")
    {
        Pos(2, 243);
        Size(110, 15);
        Font("SMALL");
        Text("Mode: None");
        Cursor("Highlight");
        Style("ROLLOVER");
        NotifyParent("Button::Press", "ShowModes");
        TipText("Select the AI mode for use of the selected Hint Node(s)", "This does not affect the AI, but instead restricts", "the use of the Node until the AI is in the specified mode");
    }
    CreateControl("Target", "BUTTON")
    {
        Pos(2, 258);
        Size(110, 15);
        Font("SMALL");
        Text("Target: None");
        Cursor("Highlight");
        Style("ROLLOVER");
        NotifyParent("Button::Press", "ShowTargets");
    }
    //CreateControl("MetaNode", "BUTTON")
    //{
    //    Pos(2, 273);
    //    Size(110, 15);
    //    Font("SMALL");
    //    Text("MetaNode");
    //    Cursor("Highlight");
    //    Style("ROLLOVER", "TOGGLE");
    //    UseVar("editor.hintnode.metanode");
    //}
    CreateControl("RadiusUnitsTitle", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(2, 288);
        Size(80, 10);
        Font("SMALL");
        JustifyText("LEFT");
        Text("Radius:");
        Style("Transparent");
    }
    CreateControl("RadiusUnits", "EDIT")
    {
        ColorGroup("INPUTBOX2");
        Pos(5, 300);
        Size(35, 15);
        Font("SMALL");
        Style("ROLLOVER");
        Cursor("Highlight");
        UseVar("editor.hintnode.radius");
        MaxLength(3);
    }
    CreateControl("RadiusSlider", "SLIDER")
    {
        ColorGroup("INPUTBOX2");
        Pos(45, 300);
        Size(60, 15);
        Font("SMALL");
        Style("ROLLOVER");
        Cursor("Highlight");
        UseVar("editor.hintnode.radius");
        SliderPageSize(30.0);
    }
    CreateControl("ToggleHeight", "BUTTON")
    {
        Pos(6, 350);
        Size(100, 15);
        Font("SMALL");
        Text("Toggle Height");
        Cursor("Highlight");
        Style("ROLLOVER", "TOGGLE");
        UseVar("editor.hintnode.toggleheight");
        TipText("Toggle the visible height", "representation of Hint Nodes");
    }
    CreateControl("HeightUnitsTitle", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(5, 366);
        Size(80, 10);
        Font("SMALL");
        JustifyText("LEFT");
        Text("Height:");
        Style("Transparent");
    }
    CreateControl("HeightUnits", "EDIT")
    {
        ColorGroup("INPUTBOX2");
        Pos(5, 378);
        Size(35, 15);
        Font("SMALL");
        Style("ROLLOVER");
        Cursor("Highlight");
        UseVar("editor.hintnode.height");
        MaxLength(6);
    }
    CreateControl("HeightSlider", "SLIDER")
    {
        ColorGroup("INPUTBOX2");
        Pos(45, 378);
        Size(60, 15);
        Font("SMALL");
        Text("Height");
        Style("ROLLOVER");
        Cursor("Highlight");
        UseVar("editor.hintnode.height");
        SliderPageSize(80.0);
        TipText("Set the height for the visual", "representation of Hint Nodes");
    }
    CreateControl("AlphaUnitsTitle", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(5, 394);
        Size(80, 10);
        Font("SMALL");
        JustifyText("LEFT");
        Text("Alpha:");
        Style("Transparent");
        TipText("Set the Alpha for the visual height", "representations of Hint Nodes", "0 = Transparent", "255 = Fully Opaque");
    }
    CreateControl("AlphaUnits", "EDIT")
    {
        ColorGroup("INPUTBOX2");
        Pos(5, 405);
        Size(35, 15);
        Font("SMALL");
        Style("ROLLOVER");
        Cursor("Highlight");
        UseVar("editor.hintnode.alpha");
        MaxLength(6);
    }
    CreateControl("AlphaSlider2", "SLIDER")
    {
        ColorGroup("INPUTBOX2");
        Pos(45, 405);
        Size(60, 15);
        Font("SMALL");
        Style("ROLLOVER");
        Cursor("Highlight");
        UseVar("editor.hintnode.alpha");
        SliderPageSize(45.0);
    }
    CreateControl("listTitle", "STATIC")
    {
        ColorGroup("BACKGROUND");
        Pos(2, 424);
        Size(80, 10);
        Font("SMALL");
        JustifyText("LEFT");
        Text("Hint Node List");
        Style("Transparent");
        TipText("List of Hint Nodes in the level");
    }
    CreateControl("HNodeListSlider", "LISTSLIDER")
    {
        Orientation("VERTICAL");
        Position(90, 437);
        Size(10, 80);
        Style("BUTTONS", "ROLLOVER");
        Cursor("Highlight");
    }
    CreateControl("HNodList", "LISTBOX")
    {
        ColorGroup("LISTBOX");
        Pos(5, 437);
        Size(85, 80);
        CellSize(85, 12);
        BorderSize(5);
        BevelSize(3);
        SliderPadding(1);
        Font("SMALL");
        ItemConfig()
        {
            Style("ROLLOVER", "RADIO");
        }
        Style("CHILDROLLOVER");
        UseVar("editor.hintnode.selection");
        UseSlider("<HNodeListSlider");
    }
    OnEvent("ShowTypes")
    {
        Cmd("editor.hintnode.showtypes");
    }
    OnEvent("ShowZones")
    {
        Cmd("editor.hintnode.showZones");
    }
    OnEvent("ShowBuildings")
    {
        Cmd("editor.hintnode.showBuildings");
    }
    OnEvent("ShowPrimaryStances")
    {
        Cmd("editor.hintnode.showprimarystances");
    }
    OnEvent("ShowSecondaryStances")
    {
        Cmd("editor.hintnode.showsecondarystances");
    }
    OnEvent("ShowModes")
    {
        Cmd("editor.hintnode.showmodes");
    }
    OnEvent("ShowTargets")
    {
        Cmd("editor.hintnode.showtargets");
    }
}

