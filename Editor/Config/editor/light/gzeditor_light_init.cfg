// =============================
// BATTLEFRONT 2 LIGHT EDITOR
// =============================

CreateControl("EditLight", "STATIC")
{
	Pos(0, 80);
	Size(115, 510);

	ColorGroup("INPUTBOX");

	OnEvent("Control::Activate")
	{
		Activate("|EditLightGlobal");
		Activate("|DirIconSize");
		Activate("|EditorLighting");
	}


	OnEvent("Control::Deactivate")
	{
		Deactivate("|EditLightGlobal");
		Deactivate("|OmniLight");
		Deactivate("|SpotLight");
		Deactivate("|DirLight");
		Deactivate("|DirLightExtra");
		Deactivate("|DirIconSize");
		Deactivate("|EditorLighting");
	}

	CreateControl("MainTitle", "STATIC")
	{
		Pos(0, 5);
		ColorGroup("BACKGROUND");
		Size(80, 10);
		Geometry("HCENTRE");
		Font("SMALL");
		Text("Edit Lights");
		Style("Transparent");
	}

	CreateControl("CursorTitle", "STATIC")
	{
		Pos(5, 25);
		ColorGroup("BACKGROUND");
		Size(80, 10);
		Font("SMALL");
		JustifyText("LEFT");
		Text("Cursor:");
		Style("Transparent");
		TipText("Select the cursor mode");
	}

	CreateControl("Select", "BUTTON")
	{
		Pos(5, 38);
		Size(50, 15);
		Font("SMALL");
		Text("Select");
		Cursor("Highlight");
		Style("ROLLOVER", "RADIO");
		UseVar("editor.light.mode.place");
		Value(0);
		TipText("This cursor mode will select previously placed lights");
	}

	CreateControl("Place", "BUTTON")
	{
		Pos(60, 38);
		Size(50, 15);
		Font("SMALL");
		Text("Place");
		Cursor("Highlight");
		Style("ROLLOVER", "RADIO");
		UseVar("editor.light.mode.place");
		Value(1);
		TipText("This cursor mode will place new lights into the world");
	}

	CreateControl("ListSlider", "LISTSLIDER")
	{
	        ColorGroup("BACKGROUND");
        	Orientation("VERTICAL");
	        Position(100, 60);
	        Size(10, 120);
	        Style("BUTTONS", "ROLLOVER");
	        Cursor("Highlight");
	}
	CreateControl("ListBox", "LISTBOX")
	{
	        ColorGroup("LISTBOX");
        	Pos(5, 60);
	        Size(95, 120);
	        CellSize(105, 12);
	        SliderPadding(1);
	        Font("SMALL");
	        Style("CHILDROLLOVER");
	        UseVar("editor.light.selection");
	        UseSlider("<ListSlider");
	}

	CreateControl("NameTitle", "STATIC")
	{
		Pos(5, 185);
		Size(80, 10);
		ColorGroup("BACKGROUND");
		Font("SMALL");
		JustifyText("LEFT");
		Text("Name:");
		Style("Transparent");
		TipText("Name of the currently selected light");
	}

	CreateControl("Name", "EDIT")
	{
		Pos(5, 195);
		Size(105, 15);
		Font("SMALL");
	        ColorGroup("INPUTBOX2");
		Cursor("Highlight");
		Style("ROLLOVER");
		UseVar("editor.light.name");
	}

	CreateControl("TypeTitle", "STATIC")
	{
		Pos(5, 215);
		ColorGroup("BACKGROUND");
		Size(80, 10);
		Font("SMALL");
		JustifyText("LEFT");
		Text("Type:");
		Style("Transparent");
		TipText("Select a type of light to place or modify","an existing light by changing it's type");
	}

	CreateControl("TypeSpot", "BUTTON")
	{
		Pos(5, 228);
		Size(35, 15);
		Font("SMALL");
		Text("Spot");
		Cursor("Highlight");
		Style("ROLLOVER", "RADIO");
		UseVar("editor.light.type");
		Value(0);
		TipText("Spotlights work well for precise directed light");
	}

	CreateControl("TypePoint", "BUTTON")
	{
		Pos(45, 228);
		Size(35, 15);
		Font("SMALL");
		Text("Omni");
		Cursor("Highlight");
		Style("ROLLOVER", "RADIO");
		UseVar("editor.light.type");
		Value(1);
		TipText("Omni lights work well for localized omni-directional lights");
	}

	CreateControl("TypeDir", "BUTTON")
	{
		Pos(85, 228);
		Size(25, 15);
		Font("SMALL");
		Text("Dir");
		Cursor("Highlight");
		Style("ROLLOVER", "RADIO");
		UseVar("editor.light.type");
		Value(2);
		TipText("Directed lights work well as imprecise directed lights");
	}


	CreateControl("ShadowTitle", "STATIC")
	{
		Pos(5, 250);
		ColorGroup("BACKGROUND");
		Size(80, 10);
		Font("SMALL");
		JustifyText("LEFT");
		Text("Cast Shadows:");
		Style("Transparent");
		TipText("Toggle whether or not this light will cast shadows");
	}
	CreateControl("ShadowYes", "BUTTON")
	{
		Pos(15, 263);
		Size(40, 15);
		Font("SMALL");
		Text("Yes");
		Cursor("Highlight");
		Style("ROLLOVER", "RADIO");
		UseVar("editor.light.cast_shadows");
		Value(1);
	}
	CreateControl("ShadowNo", "BUTTON")
	{
		Pos(60, 263);
		Size(40, 15);
		Font("SMALL");
		Text("No");
		Cursor("Highlight");
		Style("ROLLOVER", "RADIO");
		UseVar("editor.light.cast_shadows");
		Value(0);
	}


	CreateControl("StaticTitle", "STATIC")
	{
		Pos(5, 285);
		ColorGroup("BACKGROUND");
		Size(80, 10);
		Font("SMALL");
		JustifyText("LEFT");
		Text("Static:");
		Style("Transparent");
		TipText("Toggle whether or not this light is static or dynamic");
	}
	CreateControl("StaticYes", "BUTTON")
	{
		Pos(15, 298);
		Size(40, 15);
		Font("SMALL");
		Text("Yes");
		Cursor("Highlight");
		Style("ROLLOVER", "RADIO");
		UseVar("editor.light.is_static");
		Value(1);
	}
	CreateControl("StaticNo", "BUTTON")
	{
		Pos(60, 298);
		Size(40, 15);
		Font("SMALL");
		Text("No");
		Cursor("Highlight");
		Style("ROLLOVER", "RADIO");
		UseVar("editor.light.is_static");
		Value(0);
	}


	CreateControl("TextureTitle", "STATIC")
	{
		Pos(5, 320);
		ColorGroup("BACKGROUND");
		Size(80, 10);
		Font("SMALL");
		JustifyText("LEFT");
		Text("Texture:");
		Style("Transparent");
		TipText("Load a projected texture to use on the currently selected light");
	}
	CreateControl("TexName", "EDIT")
	{
		Pos(5, 330);
		Size(105, 15);
		Font("SMALL");
	        ColorGroup("INPUTBOX2");
		Cursor("Highlight");
		Style("ROLLOVER");
		UseVar("editor.light.texture");
	}
        CreateControl("BrowseTexture", "BUTTON")
        {
            Pos(5, 346);
            Size(60, 12);
            Font("SMALL");
            Style("ROLLOVER");
            Cursor("Highlight");
	    Text("Browse");
            NotifyParent("Button::Press", "browseTexture");
            TipText("Open a dialog box to browse","for a projectable texture");
        }
	OnEvent("browseTexture")
	{
	    Cmd("editor.light.browsetexture");
	}

	CreateControl("TexClampYes", "BUTTON")
	{
		Pos(15, 363);
		Size(40, 15);
		Font("SMALL");
		Text("Clamp");
		Cursor("Highlight");
		Style("ROLLOVER", "RADIO");
		UseVar("editor.light.texture_clamp");
		Value(1);
		TipText("Display a single projected texture","This would be used to project the texture of a grate in a specific area");
	}
	CreateControl("TexClampNo", "BUTTON")
	{
		Pos(60, 363);
		Size(40, 15);
		Font("SMALL");
		Text("Wrap");
		Cursor("Highlight");
		Style("ROLLOVER", "RADIO");
		UseVar("editor.light.texture_clamp");
		Value(0);
		TipText("Display multiple versions of a project texture","This would be used to create shadows of clouds across a whole level");
	}

	CreateControl("ColorTitle", "STATIC")
	{
		Pos(5, 390);
		ColorGroup("BACKGROUND");
		Size(50, 15);
		Font("SMALL");
		JustifyText("LEFT");
		Text("Color:");
		Style("Transparent");
		TipText("Type in the RGB values of a color to change","the color of the currently selected light");
	}
	CreateControl("ChooseColor", "BUTTON")
	{
		Pos(55, 392);
		Size(55, 12);
		Font("SMALL");
		Text("Pick...");
		Cursor("Highlight");
		Style("ROLLOVER");
		NotifyParent("Button::Press", "PickColor");
		TipText("Select a color from a palette");
	}
	OnEvent("PickColor")
	{
		Cmd("editor.light.pickcolor");
	}

	CreateControl("RTitle", "STATIC")
	{
		Pos(17, 405);
		ColorGroup("BACKGROUND");
		Size(50, 10);
		Font("SMALL");
		JustifyText("LEFT");
		Text("R");
		Style("Transparent");
	}
	CreateControl("GTitle", "STATIC")
	{
		Pos(55, 405);
		ColorGroup("BACKGROUND");
		Size(50, 10);
		Font("SMALL");
		JustifyText("LEFT");
		Text("G");
		Style("Transparent");
	}
	CreateControl("BTitle", "STATIC")
	{
		Pos(93, 405);
		ColorGroup("BACKGROUND");
		Size(50, 10);
		Font("SMALL");
		JustifyText("LEFT");
		Text("B");
		Style("Transparent");
	}
	CreateControl("ColorRed", "EDIT")
	{
		Pos(2, 415);
		Size(36, 15);
	        ColorGroup("INPUTBOX2");
		Font("SMALL");
		Style("ROLLOVER");
		Cursor("Highlight");
		UseVar("editor.light.red");
	}
	CreateControl("ColorGreen", "EDIT")
	{
		Pos(40, 415);
		Size(36, 15);
	        ColorGroup("INPUTBOX2");
		Font("SMALL");
		Style("ROLLOVER");
		Cursor("Highlight");
		UseVar("editor.light.green");
	}
	CreateControl("ColorBlue", "EDIT")
	{
		Pos(78, 415);
		Size(36, 15);
		Font("SMALL");
	        ColorGroup("INPUTBOX2");
		Style("ROLLOVER");
		Cursor("Highlight");
		UseVar("editor.light.blue");
	}

	CreateControl("CastSpecTitle", "STATIC")
	{
		Pos(5, 440);
		ColorGroup("BACKGROUND");
		Size(80, 10);
		Font("SMALL");
		JustifyText("LEFT");
		Text("Cast Specular:");
		Style("Transparent");
		TipText("Toggle casting specular lighting on the currently selected light");
	}
	CreateControl("CastSpecYes", "BUTTON")
	{
		Pos(15, 453);
		Size(40, 15);
		Font("SMALL");
		Text("Yes");
		Cursor("Highlight");
		Style("ROLLOVER", "RADIO");
		UseVar("editor.light.cast_specular");
		Value(1);
	}
	CreateControl("CastSpecNo", "BUTTON")
	{
		Pos(60, 453);
		Size(40, 15);
		Font("SMALL");
		Text("No");
		Cursor("Highlight");
		Style("ROLLOVER", "RADIO");
		UseVar("editor.light.cast_specular");
		Value(0);
	}

	CreateControl("PS2OverbrightTitle", "STATIC")
	{
		Pos(0, 475);
		ColorGroup("BACKGROUND");
		Size(80, 10);
		Font("SMALL");
		JustifyText("LEFT");
		Text("PS2 Overbright:");
		Style("Transparent");
		TipText("This was used for PS2 development","This has no use for PC levels");
	}
	CreateControl("PS2OverbrightYes", "BUTTON")
	{
		Pos(15, 488);
		Size(40, 15);
		Font("SMALL");
		Text("Yes");
		Cursor("Highlight");
		Style("ROLLOVER", "RADIO");
		UseVar("editor.light.ps2_overbright");
		Value(1);
	}
	CreateControl("PS2OverbrightNo", "BUTTON")
	{
		Pos(60, 488);
		Size(40, 15);
		Font("SMALL");
		Text("No");
		Cursor("Highlight");
		Style("ROLLOVER", "RADIO");
		UseVar("editor.light.ps2_overbright");
		Value(0);
	}

}

CreateControl("DirIconSize", "STATIC")
{
	Pos(120, 80);
	Size(210, 45);

	ColorGroup("INPUTBOX");

	CreateControl("IconSizeTitle", "STATIC")
	{
		Pos(5, 5);
		ColorGroup("BACKGROUND");
		Size(140, 15);
		Font("SMALL");
		JustifyText("LEFT");
		Text("Dir. Light Icon Size:");
		Style("Transparent");
		TipText("Adjust the size value for directional lights","This does not affect how the light falls across the level","this is just to aid in finding the DIR lights in the editor");
	}
	CreateControl("IconSize", "EDIT")
	{
		Pos(145, 5);
		Size(60, 15);
		Font("SMALL");
	        ColorGroup("INPUTBOX2");
		Cursor("Highlight");
		Style("ROLLOVER");
		UseVar("editor.light.global_dir_icon_size");
	}

	CreateControl("IconTypeTitle", "STATIC")
	{
		Pos(5, 25);
		ColorGroup("BACKGROUND");
		Size(120, 15);
		Font("SMALL");
		JustifyText("LEFT");
		Text("Spot/Omni Icons:");
		Style("Transparent");
		TipText("Toggle the opacity of the wireframe representations of Spot and Omni lights in the level");
	}

	CreateControl("Wire", "BUTTON")
	{
		Pos(120, 25);
		Size(40, 15);
		Font("SMALL");
		Text("Wire");
		Cursor("Highlight");
		Style("ROLLOVER", "RADIO");
		UseVar("editor.light.draw_solid_icons");
		Value(0);
	}

	CreateControl("Solid", "BUTTON")
	{
		Pos(165, 25);
		Size(40, 15);
		Font("SMALL");
		Text("Solid");
		Cursor("Highlight");
		Style("ROLLOVER", "RADIO");
		UseVar("editor.light.draw_solid_icons");
		Value(1);
	}

}

// in-editor lighting control
CreateControl("EditorLighting", "STATIC")
{
	Pos(0, 80);
	Size(210, 25);

	Geometry("TOP", "HCENTRE");

	ColorGroup("INPUTBOX");

	CreateControl("Title", "STATIC")
	{
		Pos(5, 5);
		ColorGroup("BACKGROUND");
		Size(140, 15);
		Font("SMALL");
		JustifyText("LEFT");
		Text("Show Real Lighting:");
		Style("Transparent");
		TipText("Toggle real time lighting in the editor viewpane");
	}
	CreateControl("On", "BUTTON")
	{
		Pos(140, 5);
		Size(30, 15);
		Font("SMALL");
		Text("On");
		Cursor("Highlight");
		Style("ROLLOVER", "RADIO");
		UseVar("editor.lighting_enabled");
		Value(1);
	}
	CreateControl("Off", "BUTTON")
	{
		Pos(175, 5);
		Size(30, 15);
		Font("SMALL");
		Text("Off");
		Cursor("Highlight");
		Style("ROLLOVER", "RADIO");
		UseVar("editor.lighting_enabled");
		Value(0);
	}
}


// type-specific stuff for omni lights
CreateControl("OmniLight", "STATIC")
{
	Pos(0, 592);
	Size(115, 45);

	ColorGroup("INPUTBOX");

	OnEvent("Control::Activate")
	{
		Deactivate("|SpotLight");
		Deactivate("|DirLight");
	}

	CreateControl("MainTitle", "STATIC")
	{
		Pos(0, 0);
		ColorGroup("BACKGROUND");
		Size(115, 10);
		Geometry("HCENTRE");
		Font("SMALL");
		Text("''Omni'' Options:");
		Style("Transparent");
	}

	CreateControl("RadiusTitle", "STATIC")
	{
		Pos(5, 15);
		ColorGroup("BACKGROUND");
		Size(80, 10);
		Font("SMALL");
		JustifyText("LEFT");
		Text("Radius:");
		Style("Transparent");
		TipText("The radius value for the currently selected omni light");
	}
	CreateControl("Radius", "EDIT")
	{
		Pos(5, 25);
		Size(70, 15);
		Font("SMALL");
	        ColorGroup("INPUTBOX2");
		Cursor("Highlight");
		Style("ROLLOVER");
		UseVar("editor.light.range");
	}
}

// type-specific stuff for spot lights
CreateControl("SpotLight", "STATIC")
{
	Pos(0, 592);
	Size(115, 170);

	ColorGroup("INPUTBOX");

	OnEvent("Control::Activate")
	{
		Deactivate("|OmniLight");
		Deactivate("|DirLight");
	}


	CreateControl("MainTitle", "STATIC")
	{
		Pos(0, 0);
		ColorGroup("BACKGROUND");
		Size(105, 10);
		Geometry("HCENTRE");
		Font("SMALL");
		Text("''Spot'' Options:");
		Style("Transparent");
	}

	CreateControl("RadiusTitle", "STATIC")
	{
		Pos(5, 15);
		ColorGroup("BACKGROUND");
		Size(80, 10);
		Font("SMALL");
		JustifyText("LEFT");
		Text("Range:");
		Style("Transparent");
		TipText("Change the falloff range for spotlights");
	}
	CreateControl("Radius", "EDIT")
	{
		Pos(5, 25);
		Size(70, 15);
		Font("SMALL");
	        ColorGroup("INPUTBOX2");
		Cursor("Highlight");
		Style("ROLLOVER");
		UseVar("editor.light.range");
	}

	CreateControl("SpotTitle", "STATIC")
	{
		Pos(5, 45);
		ColorGroup("BACKGROUND");
		Size(80, 10);
		Font("SMALL");
		JustifyText("LEFT");
		Text("Cone Angles:");
		Style("Transparent");
		TipText("Adjust the radii for the currently selected spotlight");
	}
	CreateControl("InnerTitle", "STATIC")
	{
		Pos(5, 55);
		ColorGroup("BACKGROUND");
		Size(45, 15);
		Font("SMALL");
		JustifyText("LEFT");
		Text("Inner:");
		Style("Transparent");
		TipText("The inner radius of the currently selected spotlight");
	}

	CreateControl("SpotInner", "EDIT")
	{
		Pos(50, 55);
		Size(60, 15);
		Font("SMALL");
	        ColorGroup("INPUTBOX2");
		Cursor("Highlight");
		Style("ROLLOVER");
		UseVar("editor.light.inner");
	}
	CreateControl("OuterTitle", "STATIC")
	{
		Pos(5, 71);
		ColorGroup("BACKGROUND");
		Size(45, 15);
		Font("SMALL");
		JustifyText("LEFT");
		Text("Outer:");
		Style("Transparent");
		TipText("The outer radius of the currently selected spotlight");
	}

	CreateControl("SpotOuter", "EDIT")
	{
		Pos(50, 71);
		Size(60, 15);
		Font("SMALL");
	        ColorGroup("INPUTBOX2");
		Cursor("Highlight");
		Style("ROLLOVER");
		UseVar("editor.light.outer");
	}

	CreateControl("BidirectionalTitle", "STATIC")
	{
		Pos(5, 95);
		ColorGroup("BACKGROUND");
		Size(90, 10);
		Font("SMALL");
		JustifyText("LEFT");
		Text("Bidirectional:");
		Style("Transparent");
		TipText("Toggle whether or not a spotlight displays in two directions");
	}
	CreateControl("BDYes", "BUTTON")
	{
		Pos(5, 107);
		Size(40, 15);
		Font("SMALL");
		Cursor("Highlight");
		Style("ROLLOVER", "RADIO");
		Text("Yes");
		UseVar("editor.light.spot_bidirectional");
		Value(1);
	}
	CreateControl("BDNo", "BUTTON")
	{
		Pos(60, 107);
		Size(40, 15);
		Font("SMALL");
		Cursor("Highlight");
		Style("ROLLOVER", "RADIO");
		Text("No");
		UseVar("editor.light.spot_bidirectional");
		Value(0);
	}

	CreateControl("BlendTitle1", "STATIC")
	{
		Pos(5, 130);
		ColorGroup("BACKGROUND");
		Size(80, 10);
		Font("MEDIUM");
		JustifyText("LEFT");
		Text("--PS2 ONLY--");
		Style("Transparent");
		TipText("As this is PS2 only, please disregard the options below");
	}
	CreateControl("BlendTitle2", "STATIC")
	{
		Pos(5, 140);
		ColorGroup("BACKGROUND");
		Size(90, 10);
		Font("SMALL");
		JustifyText("LEFT");
		Text("Blend Mode:");
		Style("Transparent");
	}
	CreateControl("Add", "BUTTON")
	{
		Pos(5, 150);
		Size(25, 15);
		Font("SMALL");
		Text("Add");
		Cursor("Highlight");
		Style("ROLLOVER", "RADIO");
		UseVar("editor.light.ps2blendmode");
		Value(0);
	}
	CreateControl("Mult", "BUTTON")
	{
		Pos(33, 150);
		Size(35, 15);
		Font("SMALL");
		Text("Mult");
		Cursor("Highlight");
		Style("ROLLOVER", "RADIO");
		UseVar("editor.light.ps2blendmode");
		Value(1);
	}
	CreateControl("Blend", "BUTTON")
	{
		Pos(71, 150);
		Size(40, 15);
		Font("SMALL");
		Text("Blend");
		Cursor("Highlight");
		Style("ROLLOVER", "RADIO");
		UseVar("editor.light.ps2blendmode");
		Value(2);
	}
}

// type-specific stuff for spot lights
CreateControl("DirLightExtra", "STATIC")
{
	Pos(117, 380);
	Size(140, 90);

	ColorGroup("INPUTBOX");

	OnEvent("Control::Activate")
	{
		Deactivate("|SpotLight");
		Deactivate("|OmniLight");
		Activate("|DirLightExtra");
	}

	OnEvent("Control::Deactivate")
	{
		Deactivate("|DirLightExtra");
	}

	CreateControl("Arrow", "STATIC")
	{
		Pos(0, 35);
		ColorGroup("BACKGROUND");
		Size(20, 10);
		Font("SMALL");
		Text("-->");
		Style("Transparent");
	}

	CreateControl("TileUTitle", "STATIC")
	{
		Pos(20, 5);
		ColorGroup("BACKGROUND");
		Size(50, 10);
		Font("SMALL");
		Text("Tile U:");
		Style("Transparent");
		TipText("The U tilerange for the current projected texture");
	}

	CreateControl("TileU", "EDIT")
	{
		Pos(75, 5);
		Size(50, 15);
		Font("SMALL");
	        ColorGroup("INPUTBOX2");
		Cursor("Highlight");
		Style("ROLLOVER");
		UseVar("editor.light.tile_u");
	}

	CreateControl("TileVTitle", "STATIC")
	{
		Pos(50, 25);
		ColorGroup("BACKGROUND");
		Size(20, 10);
		Font("SMALL");
		Text("V:");
		Style("Transparent");
		TipText("The V tilerange for the current projected texture");
	}

	CreateControl("TileV", "EDIT")
	{
		Pos(75, 25);
		Size(50, 15);
		Font("SMALL");
	        ColorGroup("INPUTBOX2");
		Cursor("Highlight");
		Style("ROLLOVER");
		UseVar("editor.light.tile_v");
	}

	CreateControl("OFfUTitle", "STATIC")
	{
		Pos(20, 50);
		ColorGroup("BACKGROUND");
		Size(65, 10);
		Font("SMALL");
		Text("Offset U:");
		Style("Transparent");
		TipText("The U offset value for the current projected texture");
	}

	CreateControl("OffU", "EDIT")
	{
		Pos(85, 50);
		Size(50, 15);
		Font("SMALL");
	        ColorGroup("INPUTBOX2");
		Cursor("Highlight");
		Style("ROLLOVER");
		UseVar("editor.light.offset_u");
	}

	CreateControl("OffVTitle", "STATIC")
	{
		Pos(70, 70);
		ColorGroup("BACKGROUND");
		Size(13, 10);
		Font("SMALL");
		Text("V:");
		Style("Transparent");
		TipText("The V offset value for the current projected texture");
	}

	CreateControl("OffV", "EDIT")
	{
		Pos(85, 70);
		Size(50, 15);
		Font("SMALL");
	        ColorGroup("INPUTBOX2");
		Cursor("Highlight");
		Style("ROLLOVER");
		UseVar("editor.light.offset_v");
	}
}

// type-specific stuff for spot lights
CreateControl("DirLight", "STATIC")
{
	Pos(0, 592);
	Size(115, 105);

	ColorGroup("INPUTBOX");

	OnEvent("Control::Activate")
	{
		Deactivate("|SpotLight");
		Deactivate("|OmniLight");
		Activate("|DirLightExtra");
	}

	OnEvent("Control::Deactivate")
	{
		Deactivate("|DirLightExtra");
	}

	CreateControl("MainTitle", "STATIC")
	{
		Pos(0, 0);
		ColorGroup("BACKGROUND");
		Size(105, 10);
		Geometry("HCENTRE");
		Font("SMALL");
		Text("''Dir'' Options:");
		Style("Transparent");
	}

	CreateControl("BoundingRegion", "STATIC")
	{
		Pos(0, 15);
		ColorGroup("BACKGROUND");
		Size(115, 10);
		Font("SMALL");
		Geometry("HCENTRE");
		Text("Bounding Region");
		Style("Transparent");
	}
	CreateControl("Name", "EDIT")
	{
		Pos(5, 25);
		Size(105, 15);
		Font("SMALL");
	        ColorGroup("INPUTBOX2");
		Cursor("Highlight");
		Style("ROLLOVER");
		UseVar("editor.light.bounding_region");
	}

	CreateControl("ChooseRegion", "BUTTON")
	{
		Pos(5, 41);
		Size(60, 12);
		Font("SMALL");
		Text("Choose...");
		Cursor("Highlight");
		Style("ROLLOVER", "RADIO");
		UseVar("editor.light.mode.place");
		Value(2);
	}

// from spotlight

	CreateControl("BlendTitle1", "STATIC")
	{
		Pos(5, 65);
		ColorGroup("BACKGROUND");
		Size(80, 10);
		Font("MEDIUM");
		JustifyText("LEFT");
		Text("--PS2 ONLY--");
		Style("Transparent");
	}
	CreateControl("BlendTitle2", "STATIC")
	{
		Pos(5, 75);
		ColorGroup("BACKGROUND");
		Size(90, 10);
		Font("SMALL");
		JustifyText("LEFT");
		Text("Blend Mode:");
		Style("Transparent");
	}
	CreateControl("Add", "BUTTON")
	{
		Pos(5, 85);
		Size(25, 15);
		Font("SMALL");
		Text("Add");
		Cursor("Highlight");
		Style("ROLLOVER", "RADIO");
		UseVar("editor.light.ps2blendmode");
		Value(0);
	}
	CreateControl("Mult", "BUTTON")
	{
		Pos(33, 85);
		Size(35, 15);
		Font("SMALL");
		Text("Mult");
		Cursor("Highlight");
		Style("ROLLOVER", "RADIO");
		UseVar("editor.light.ps2blendmode");
		Value(1);
	}
	CreateControl("Blend", "BUTTON")
	{
		Pos(71, 85);
		Size(40, 15);
		Font("SMALL");
		Text("Blend");
		Cursor("Highlight");
		Style("ROLLOVER", "RADIO");
		UseVar("editor.light.ps2blendmode");
		Value(2);
	}

}

CreateControl("EditLightGlobal", "STATIC")
{
	Pos(0, 80);
	Size(200, 272);
	Geometry("RIGHT", "TOP");
	ColorGroup("INPUTBOX");

	CreateControl("MainTitle", "STATIC")
	{
		Pos(0, 0);
		ColorGroup("BACKGROUND");
		Size(200, 10);
		Geometry("HCENTRE");
		Font("SMALL");
		Text("Global Light Settings");
		Style("Transparent");
		TipText("These settings control the overall light settings for the level","These values do not override the placed lights or their values");
	}

	CreateControl("D1Title", "STATIC")
	{
		Pos(5, 25);
		ColorGroup("BACKGROUND");
		Size(190, 10);
		Font("SMALL");
		JustifyText("LEFT");
		Text("Directional Light 1");
		Style("Transparent");
		TipText("The name of the first global directional light");
	}
	CreateControl("D1NameTitle", "STATIC")
	{
		Pos(5, 35);
		ColorGroup("BACKGROUND");
		Size(40, 10);
		Font("SMALL");
		JustifyText("LEFT");
		Text("Name:");
		Style("Transparent");
	}
	CreateControl("D1Name", "EDIT")
	{
		Pos(50, 35);
		Size(145, 15);
		Font("SMALL");
	        ColorGroup("INPUTBOX2");
		Cursor("Highlight");
		Style("ROLLOVER");
		UseVar("editor.light.global1_name");
	}

	CreateControl("D2Title", "STATIC")
	{
		Pos(5, 60);
		ColorGroup("BACKGROUND");
		Size(190, 10);
		Font("SMALL");
		JustifyText("LEFT");
		Text("Directional Light 2");
		Style("Transparent");
		TipText("The name of the second global directional light");
	}
	CreateControl("D2NameTitle", "STATIC")
	{
		Pos(5, 70);
		ColorGroup("BACKGROUND");
		Size(40, 10);
		Font("SMALL");
		JustifyText("LEFT");
		Text("Name:");
		Style("Transparent");
	}
	CreateControl("D2Name", "EDIT")
	{
		Pos(50, 70);
		Size(145, 15);
		Font("SMALL");
	        ColorGroup("INPUTBOX2");
		Cursor("Highlight");
		Style("ROLLOVER");
		UseVar("editor.light.global2_name");
	}

	CreateControl("ColorTitle", "STATIC")
	{
		Pos(5, 95);
		ColorGroup("BACKGROUND");
		Size(120, 10);
		Font("SMALL");
		JustifyText("LEFT");
		Text("Top Ambient Color:");
		Style("Transparent");
		TipText("Type in the RGB values of a color to change","the color of the top ambient light");
	}
	CreateControl("ChooseColor", "BUTTON")
	{
		Pos(5, 115);
		Size(55, 25);
		Font("SMALL");
		Text("Pick...");
		Cursor("Highlight");
		Style("ROLLOVER");
		NotifyParent("Button::Press", "PickTop");
		TipText("Select a color from a palette");
	}
	OnEvent("PickTop")
	{
		Cmd("editor.light.ambient.picktop");
	}

	CreateControl("RTitleT", "STATIC")
	{
		Pos(70, 105);
		ColorGroup("BACKGROUND");
		Size(15, 15);
		Font("SMALL");
		JustifyText("LEFT");
		Text("R");
		Style("Transparent");
	}
	CreateControl("GTitleT", "STATIC")
	{
		Pos(70, 121);
		ColorGroup("BACKGROUND");
		Size(15, 15);
		Font("SMALL");
		JustifyText("LEFT");
		Text("G");
		Style("Transparent");
	}
	CreateControl("BTitleT", "STATIC")
	{
		Pos(70, 137);
		ColorGroup("BACKGROUND");
		Size(15, 15);
		Font("SMALL");
		JustifyText("LEFT");
		Text("B");
		Style("Transparent");
	}
	CreateControl("ColorRedT", "EDIT")
	{
		Pos(85, 105);
	        ColorGroup("INPUTBOX2");
		Size(40, 15);
		Font("SMALL");
		Style("ROLLOVER");
		Cursor("Highlight");
		UseVar("editor.light.ambient.r_top");
	}
	CreateControl("ColorGreenT", "EDIT")
	{
		Pos(85, 121);
	        ColorGroup("INPUTBOX2");
		Size(40, 15);
		Font("SMALL");
		Style("ROLLOVER");
		Cursor("Highlight");
		UseVar("editor.light.ambient.g_top");
	}
	CreateControl("ColorBlueT", "EDIT")
	{
		Pos(85, 137);
	        ColorGroup("INPUTBOX2");
		Size(40, 15);
		Font("SMALL");
		Style("ROLLOVER");
		Cursor("Highlight");
		UseVar("editor.light.ambient.b_top");
	}

	CreateControl("ColorTitle2", "STATIC")
	{
		Pos(5, 165);
		ColorGroup("BACKGROUND");
		Size(120, 10);
		Font("SMALL");
		JustifyText("LEFT");
		Text("Bottom Ambient Color:");
		Style("Transparent");
		TipText("Type in the RGB values of a color to change","the color of the bottom ambient light");
	}
	CreateControl("ChooseColor2", "BUTTON")
	{
		Pos(5, 185);
		Size(55, 25);
		Font("SMALL");
		Text("Pick...");
		Cursor("Highlight");
		Style("ROLLOVER");
		NotifyParent("Button::Press", "PickBottom");
		TipText("Select a color from a palette");
	}
	OnEvent("PickBottom")
	{
		Cmd("editor.light.ambient.pickbottom");
	}

	CreateControl("RTitleB", "STATIC")
	{
		Pos(70, 175);
		ColorGroup("BACKGROUND");
		Size(15, 15);
		Font("SMALL");
		JustifyText("LEFT");
		Text("R");
		Style("Transparent");
	}
	CreateControl("GTitleB", "STATIC")
	{
		Pos(70, 191);
		ColorGroup("BACKGROUND");
		Size(15, 15);
		Font("SMALL");
		JustifyText("LEFT");
		Text("G");
		Style("Transparent");
	}
	CreateControl("BTitleB", "STATIC")
	{
		Pos(70, 207);
		ColorGroup("BACKGROUND");
		Size(15, 15);
		Font("SMALL");
		JustifyText("LEFT");
		Text("B");
		Style("Transparent");
	}
	CreateControl("ColorRedB", "EDIT")
	{
		Pos(85, 175);
	        ColorGroup("INPUTBOX2");
		Size(40, 15);
		Font("SMALL");
		Style("ROLLOVER");
		Cursor("Highlight");
		UseVar("editor.light.ambient.r_bottom");
	}
	CreateControl("ColorGreenB", "EDIT")
	{
		Pos(85, 191);
	        ColorGroup("INPUTBOX2");
		Size(40, 15);
		Font("SMALL");
		Style("ROLLOVER");
		Cursor("Highlight");
		UseVar("editor.light.ambient.g_bottom");
	}
	CreateControl("ColorBlueB", "EDIT")
	{
		Pos(85, 207);
	        ColorGroup("INPUTBOX2");
		Size(40, 15);
		Font("SMALL");
		Style("ROLLOVER");
		Cursor("Highlight");
		UseVar("editor.light.ambient.b_bottom");
	}

	CreateControl("EnvMapTitle", "STATIC")
	{
		Pos(5, 230);
		ColorGroup("BACKGROUND");
		Size(190, 10);
		Font("SMALL");
		JustifyText("LEFT");
		Text("Environment Map");
		Style("Transparent");
		TipText("Load a global environment map texture");
	}
	CreateControl("EnvMapNameTitle", "STATIC")
	{
		Pos(5, 240);
		ColorGroup("BACKGROUND");
		Size(40, 10);
		Font("SMALL");
		JustifyText("LEFT");
		Text("Name:");
		Style("Transparent");
	}
	CreateControl("EnvMapName", "EDIT")
	{
		Pos(50, 240);
		Size(145, 15);
		Font("SMALL");
	        ColorGroup("INPUTBOX2");
		Cursor("Highlight");
		Style("ROLLOVER");
		UseVar("editor.light.env_map_name");
	}

	CreateControl("ChooseColor2", "BUTTON")
	{
		Pos(50, 255);
		Size(75, 12);
		Font("SMALL");
		Text("Browse...");
		Cursor("Highlight");
		Style("ROLLOVER");
		NotifyParent("Button::Press", "PickEnvMap");
		TipText("Open a dialog box to browse","for a environmental map texture");
	}
	OnEvent("PickEnvMap")
	{
		Cmd("editor.light.browse_envmap");
	}

}

