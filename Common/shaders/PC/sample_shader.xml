<?xml version="1.0" encoding="utf-8" ?>
<shader rendertype="sample" skinned="no" debuginfo="no">
	<pipeline id="1">
		<state id="0">
			<pass transform="none" lighting="none" texcoord="no">
				<vertexshader target="vs_1_1">
				#include "pcRedVertexShaderMacros.h"
				#include "pcRedVertexShaderConstants.h"

				dcl_position		V_POS
					
				; decompress position
				mul R_POS, c[C_POS_DECOMPRESS0], V_POS
				add R_POS, c[C_POS_DECOMPRESS1], R_POS
				
				; normalize output coordinates
				add R_TEMP.xy, R_POS.xy, c[C_CUSTOM_MIN+0].zw
				mul oT0.xy, R_TEMP.xy, c[C_CUSTOM_MIN+0].xy
				mov oT0.zw, c[C_CONST0].xz			// move 1.0 into w component		
				
				mov oPos, c[C_CUSTOM_MIN+1]
				</vertexshader>
				
				<pixelshader target="ps_1_1">
				tex t0	       			// sample texture

				mul r0.rgba, t0.aaaa, c0.rgba	// scale the input then add
				</pixelshader>			
			</pass>
		</state>
	</pipeline>
</shader>